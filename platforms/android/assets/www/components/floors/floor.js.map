{"version":3,"sources":["app/components/floors/floor.ts"],"names":["Floor","Floor.constructor","Floor.switchEditMode","Floor.cancelEditFloorNameForm","Floor.submitEditFloorNameForm","Floor.fetch","Floor.ngOnInit"],"mappings":"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","file":"app/components/floors/floor.js","sourcesContent":["import {Component, Input, NgZone, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter} from 'angular2/core';\nimport {FormBuilder, Validators} from 'angular2/common';\nimport {Observable} from 'rxjs';\nimport {IFloor} from '../../services/FloorService';\nimport {FloorElementsService, IFloorElement} from '../../services/FloorElementsService';\nimport {Room} from './room';\nimport {SOCKET_URL} from '../../constants';\nimport {ReservationModal} from '../reservation/reservation-modal';\nimport {AppService} from '../../services/AppService';\nimport {FloorService} from '../../services/FloorService';\nimport {Placeholder} from './placeholder';\nimport {Line} from './line';\nimport {Icon} from './icon';\nimport {LoadingIndicator} from '../../directives/loading-indicator';\nimport {PlaceElement} from '../../directives/place-element';\nimport {EditElement} from '../design/edit-element';\nimport {Droppable} from '../../directives/droppable';\nimport {DesignService} from '../../services/DesignService';\nimport {IReservation, ReservationService} from '../../services/ReservationService';\n\ndeclare var _: any;\ndeclare var io: any;\n\n@Component({\n  selector: 'floor',\n  providers: [FloorElementsService],\n  directives: [Room, Icon, PlaceElement, Placeholder, Line, Droppable, LoadingIndicator],\n  styleUrls: ['styles/floors/floor.css', 'styles/floors/floors.css'],\n  template: `\n  <div [ngClass]=\"{'design-mode': designMode}\">\n    <ul class=\"list-inline\">\n      <li>\n        <h1 *ngIf=\"!editMode\">\n          {{ floor.floorName }}\n          <span *ngIf=\"designMode\">\n            <a (click)=\"switchEditMode()\" class=\"button\"><i class=\"fa fa-pencil\"></i></a>\n          </span>\n        </h1>\n        <div *ngIf=\"editMode\" class=\"header\">\n          <form [ngFormModel]=\"editFloorNameForm\">\n            <input type=\"text\" name=\"floorName\" id=\"floorName\" ngControl=\"floorName\">\n            <button (click)=\"submitEditFloorNameForm($event)\" type=\"submit\" class=\"button\"><i class=\"fa fa-check\"></i></button>\n            <button (click)=\"cancelEditFloorNameForm($event)\" class=\"button\"><i class=\"fa fa-times\"></i></button>\n          </form>\n        </div>\n      </li>\n      <li>\n        <loading-indicator *ngIf=\"isLoading\" mini=\"true\"></loading-indicator>\n      </li>\n    </ul>\n    <div [attr.id]=\"'floor' + floor.floorID\" class=\"floor\" droppable-element\n      [attr.data-id]=\"floor.floorID\" [ngClass]=\"{loading: isLoading}\">\n      <div class=\"inner\">\n        <div *ngFor=\"#element of floorElements\" [ngSwitch]=\"element.elementType\">\n          <room *ngSwitchWhen=\"'room'\" [data]=\"element\" place-element></room>\n          <line *ngSwitchWhen=\"'line'\" [data]=\"element\" place-element></line>\n          <placeholder *ngSwitchWhen=\"'placeholder'\" [data]=\"element\" place-element></placeholder>\n          <icon *ngSwitchDefault [data]=\"element\" place-element></icon>\n        </div>\n      </div>\n    </div>\n  </div>\n  `\n})\n\nexport class Floor {\n  @Input() floor: IFloor;\n  @Input() isLoading: boolean;\n  // @Output() deleteFloor = new EventEmitter();\n  // @Output() updateFloor = new EventEmitter();\n  floorElements: Array<IFloorElement>;\n  reservations: Array<IReservation>;\n  floorElementsObservable;\n  editMode: boolean;\n  designMode: boolean;\n  editFloorNameForm;\n\n  constructor(private floorElementsService: FloorElementsService,\n    private changeRef: ChangeDetectorRef, private DesignService: DesignService,\n    private ReservationService: ReservationService, private fb: FormBuilder,\n    private floorService: FloorService\n  ) {\n    this.floorElements = [];\n    this.floorElementsObservable = this.floorElementsService.getObservable();\n    this.floorElementsObservable.connect();\n    this.designMode = DesignService.designModeState;\n    this.isLoading = false;\n  }\n\n  switchEditMode() {\n    this.editMode = true;\n  }\n\n  cancelEditFloorNameForm(e) {\n    e.preventDefault();\n    this.editMode = false;\n  }\n\n  submitEditFloorNameForm(e) {\n    e.preventDefault();\n    this.isLoading = true;\n    this.floorService.updateFloor(this.floor.floorID, {\n      floorName: this.editFloorNameForm.value.floorName\n    })\n      .delay(500)\n      .subscribe(\n        (res: any) => {\n          this.editMode = false;\n          this.isLoading = false;\n          this.floor.floorName = this.editFloorNameForm.value.floorName;\n        }\n      );\n  }\n\n  // changeOrder(direction) {\n  //   this.isLoading = true;\n  //   this.updateFloor\n  //     .next({\n  //       floorID: this.floor.floorID,\n  //       type: 'order',\n  //       direction: direction\n  //     });\n  // }\n  //\n  // showDeleteFloorConfirmation() {\n  //   this.showConfirmDeletion = true;\n  //   if (this.overlayObservable.subscription) {\n  //     this.overlayObservable.subscription\n  //       .next({\n  //         type: 'show',\n  //         message: `You are about to delete a floor. Are you sure you want to do that?\n  //           Be aware that you will also delete the reservations.`,\n  //         panelType: 'confirmation',\n  //         id: this.floor.floorID\n  //       });\n  //   }\n  // }\n\n  // deleteFloor() {\n  //   this.isLoading = true;\n  //   this.floorService.deleteFloor(this.floor.floorID)\n  //     .delay(200)\n  //     .subscribe(\n  //       (res: any) => {\n  //         if (res.status === 204) {\n  //           console.log(this.componentRef);\n  //           // this.componentRef.dispose();\n  //         }\n  //       }\n  //     );\n  // }\n\n  fetch(floorID) {\n    this.isLoading = true;\n    this.floorElementsService.fetchElementsByFloorID(floorID)\n      // .delay(200)\n      .subscribe(\n        (res: any) => {\n          let arr = res.json().data;\n          this.floorElements = arr;\n          this.isLoading = false;\n          this.changeRef.markForCheck();\n        }\n      );\n  }\n\n  ngOnInit() {\n    let socket = io.connect(SOCKET_URL);\n\n    socket.on('elements', (res) => {\n      if (!this.DesignService.designModeState) {\n        let index = _.findIndex(this.floorElements, { elementID: res.elementID });\n        if (res.floorID === this.floor.floorID) {\n          if (index === -1) {\n            this.floorElements.push(res);\n          } else {\n            this.floorElements[index] = res;\n          }\n        }\n      }\n    });\n\n    socket.on('reservations', (res) => {\n      if (!this.DesignService.designModeState) {\n        this.ReservationService.fetchReservations()\n          .subscribe(() => {\n            this.reservations = this.ReservationService.reservations;\n            this.changeRef.markForCheck();\n          });\n      }\n    });\n\n    this.floorElementsObservable\n      .subscribe((res: any) => {\n        if (res.type === 'data') {\n          this.isLoading = false;\n          this.floorElements = res.data;\n        } else {\n          this.isLoading = true;\n        }\n        this.changeRef.detectChanges();\n      });\n\n    this.fetch(this.floor.floorID);\n    this.editFloorNameForm = this.fb.group({\n      floorName: [this.floor.floorName, Validators.required]\n    });\n  }\n\n}\n"],"sourceRoot":"/source/"}