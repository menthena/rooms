{"version":3,"sources":["app/components/floors/floors.ts"],"names":["Floors","Floors.constructor","Floors.ngOnInit","Floors.addFloor","Floors.fetchAll","Floors.showDeleteFloorConfirmation","Floors.deleteFloor","Floors.changeOrder"],"mappings":"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","file":"app/components/floors/floors.js","sourcesContent":["import {Component, OnInit} from 'angular2/core';\nimport {Observable} from 'rxjs/Observable';\nimport {FloorService, IFloor} from '../../services/FloorService';\nimport {AppService} from '../../services/AppService';\nimport {ReservationService} from '../../services/ReservationService';\nimport {DesignService} from '../../services/DesignService';\nimport {Floor} from './floor';\nimport {LoadingIndicator} from '../../directives/loading-indicator';\n\ndeclare var _: any;\n\n@Component({\n  selector: 'floors',\n  directives: [Floor, LoadingIndicator],\n  template: `\n    <a *ngIf=\"designMode && floors && floors.length > 0\" (click)=\"addFloor()\"\n      class=\"add-floor button\"><i class=\"fa fa-plus\"></i> Add floor</a>\n    <loading-indicator *ngIf=\"isLoading\"></loading-indicator>\n    <div *ngIf=\"floors\">\n      <div class=\"no-floor text-center\" *ngIf=\"!isLoading && floors.length === 0\">\n        <div>\n          No floors, why don't you add one?\n        </div>\n        <a *ngIf=\"designMode\" (click)=\"addFloor()\"><i class=\"fa fa-plus\"></i> Add floor</a>\n      </div>\n\n      <div *ngFor=\"#floor of floors\">\n        <div *ngIf=\"designMode\" class=\"pull-right\">\n          <a (click)=\"changeOrder(floor.floorID, 'up')\" *ngIf=\"floor.order > 0\" class=\"button\"><i class=\"fa fa-arrow-up\"></i></a>\n          <a (click)=\"changeOrder(floor.floorID, 'down')\" *ngIf=\"floor.order < floors.length - 1\"\n            class=\"button\"><i class=\"fa fa-arrow-down\"></i></a>\n          <a (click)=\"showDeleteFloorConfirmation(floor.floorID)\" class=\"button\"><i class=\"fa fa-trash\"></i></a>\n        </div>\n        <floor [floor]=\"floor\"></floor>\n      </div>\n    </div>\n  `,\n  styleUrls: ['styles/floors/floors.css']\n})\n\nexport class Floors {\n  floors: Array<IFloor>;\n  overlayObservable;\n  showConfirmDeletion: boolean;\n  isLoading: boolean;\n  designMode: boolean;\n\n  constructor(private floorService: FloorService, private DesignService: DesignService,\n    private AppService: AppService) {\n    this.overlayObservable = this.AppService.overlayObservable;\n  }\n\n  ngOnInit() {\n    this.fetchAll();\n    this.designMode = this.DesignService.designModeState;\n    // TODO:\n    // this.overlayObservable\n    //   .subscription\n    //   .subscribe((res) => {\n    //     if (res.type === 'response') {\n    //       if (res.data === true) {\n    //         this.deleteFloor(res.id);\n    //       }\n    //     }\n    //   });\n  }\n\n  addFloor() {\n    this.isLoading = true;\n    this.floorService.addFloor('Untitled floor')\n      .delay(500)\n      .subscribe(\n        (res: any) => {\n          this.isLoading = false;\n          let floors = res.json().data;\n          floors = _.sortBy(floors, 'order');\n          this.floors = floors;\n        }\n      );\n  }\n\n  fetchAll() {\n    this.isLoading = true;\n    this.floorService.fetchAll()\n      .subscribe(\n        (res: any) => {\n          this.isLoading = false;\n          let floors = res.json().data;\n          floors = _.sortBy(floors, 'order');\n          this.floors = floors;\n        }\n      );\n  }\n\n  showDeleteFloorConfirmation(id) {\n    this.showConfirmDeletion = true;\n    if (this.overlayObservable.subscription) {\n      this.overlayObservable.subscription\n        .next({\n          type: 'show',\n          message: `You are about to delete a floor. Are you sure you want to do that?\n            Be aware that you will also delete the reservations.`,\n          panelType: 'confirmation',\n          id: id\n        });\n    }\n  }\n\n  deleteFloor(floorID) {\n    this.floorService.deleteFloor(floorID)\n      .delay(200)\n      .subscribe(\n        (res: any) => {\n          if (res.status === 204) {\n            _.remove(this.floors, { floorID: floorID });\n          }\n        }\n      );\n  }\n\n  changeOrder(id, direction) {\n    this.floorService.changeOrder(id, direction)\n      .delay(200)\n      .subscribe(\n        (res: any) => {\n          let floors = res.json().data;\n          floors = _.sortBy(floors, 'order');\n          this.floors = floors;\n        }\n      );\n  }\n\n}\n"],"sourceRoot":"/source/"}