{"version":3,"sources":["app/components/common/appwide-overlay.ts"],"names":["AppwideOverlay","AppwideOverlay.constructor","AppwideOverlay.ngOnInit","AppwideOverlay.confirm","AppwideOverlay.hide"],"mappings":";;;;;;;;;;;;;;;;;;;;;YAKA;gBA+BEA,wBAAoBA,UAAsBA;oBAAtBC,eAAUA,GAAVA,UAAUA,CAAYA;oBACxCA,IAAIA,CAACA,UAAUA,GAAGA,IAAIA,CAACA,UAAUA,CAACA,iBAAiBA,CAACA;gBACtDA,CAACA;gBAEDD,iCAAQA,GAARA;oBAAAE,iBAeCA;oBAdCA,IAAIA,CAACA,UAAUA;yBACZA,OAAOA,EAAEA,CAACA;oBACbA,IAAIA,CAACA,UAAUA;yBACZA,SAASA,CAACA,UAAAA,GAAGA;wBACZA,EAAEA,CAACA,CAACA,GAAGA,CAACA,IAAIA,KAAKA,MAAMA,CAACA,CAACA,CAACA;4BACxBA,KAAIA,CAACA,aAAaA,GAAGA,IAAIA,CAACA;4BAC1BA,KAAIA,CAACA,SAASA,GAAGA,GAAGA,CAACA,SAASA,CAACA;4BAC/BA,KAAIA,CAACA,OAAOA,GAAGA,GAAGA,CAACA,OAAOA,CAACA;4BAC3BA,KAAIA,CAACA,EAAEA,GAAGA,GAAGA,CAACA,EAAEA,CAACA;4BACjBA,UAAUA,CAACA;gCACTA,KAAIA,CAACA,QAAQA,GAAGA,IAAIA,CAACA;4BACvBA,CAACA,EAAEA,GAAGA,CAACA,CAACA;wBACVA,CAACA;oBACHA,CAACA,CAACA,CAACA;gBACPA,CAACA;gBAEDF,gCAAOA,GAAPA,UAAQA,YAAqBA;oBAC3BG,EAAEA,CAACA,CAACA,YAAYA,CAACA,CAACA,CAACA;wBACjBA,IAAIA,CAACA,UAAUA;6BACZA,YAAYA;6BACZA,IAAIA,CAACA;4BACJA,IAAIA,EAAEA,UAAUA;4BAChBA,IAAIA,EAAEA,IAAIA;4BACVA,EAAEA,EAAEA,IAAIA,CAACA,EAAEA;yBACZA,CAACA,CAACA;oBACPA,CAACA;oBACDA,IAAIA,CAACA,IAAIA,EAAEA,CAACA;gBACdA,CAACA;gBAEDH,6BAAIA,GAAJA;oBAAAI,iBAKCA;oBAJCA,IAAIA,CAACA,QAAQA,GAAGA,KAAKA,CAACA;oBACtBA,UAAUA,CAACA;wBACTA,KAAIA,CAACA,aAAaA,GAAGA,KAAKA,CAACA;oBAC7BA,CAACA,EAAEA,GAAGA,CAACA,CAACA;gBACVA,CAACA;gBAtEHJ;oBAACA,gBAASA,CAACA;wBACTA,QAAQA,EAAEA,iBAAiBA;wBAC3BA,QAAQA,EAAEA,4kBAiBTA;wBACDA,SAASA,EAAEA,CAACA,mCAAmCA,CAACA;qBACjDA,CAACA;;mCAmDDA;gBAADA,qBAACA;YAADA,CAxEA,AAwECA,IAAA;YAxED,2CAwEC,CAAA","file":"app/components/common/appwide-overlay.js","sourcesContent":["import {Component} from 'angular2/core';\nimport {Observable} from 'rxjs';\nimport {RouterLink} from 'angular2/router';\nimport {AppService} from '../../services/AppService';\n\n@Component({\n  selector: 'appwide-overlay',\n  template: `\n    <div class=\"appwide-overlay\" *ngIf=\"isPanelActive\" [class.active]=\"isActive\">\n      <a (click)=\"hide()\" class=\"pull-right hide-button\">\n        <i class=\"fa fa-times\"></i>\n      </a>\n      <div class=\"box text-center\">\n        <div class=\"inner\">\n          <div>\n            {{ message }}\n          </div>\n          <div *ngIf=\"panelType === 'confirmation'\" class=\"buttons\">\n            <a (click)=\"confirm(true)\" class=\"yes\">Yes</a>\n            <a (click)=\"confirm(false)\">No</a>\n          </div>\n        </div>\n      </div>\n    <div>\n  `,\n  styleUrls: ['styles/common/appwide-overlay.css']\n})\n\nexport class AppwideOverlay {\n  observable;\n  isActive: boolean;\n  isPanelActive: boolean;\n  panelType: string;\n  message: string;\n  id: string;\n\n  constructor(private AppService: AppService) {\n    this.observable = this.AppService.overlayObservable;\n  }\n\n  ngOnInit() {\n    this.observable\n      .connect();\n    this.observable\n      .subscribe(res => {\n        if (res.type === 'show') {\n          this.isPanelActive = true;\n          this.panelType = res.panelType;\n          this.message = res.message;\n          this.id = res.id;\n          setTimeout(() => {\n            this.isActive = true;\n          }, 100);\n        }\n      });\n  }\n\n  confirm(confirmation: boolean) {\n    if (confirmation) {\n      this.observable\n        .subscription\n        .next({\n          type: 'response',\n          data: true,\n          id: this.id\n        });\n    }\n    this.hide();\n  }\n\n  hide() {\n    this.isActive = false;\n    setTimeout(() => {\n      this.isPanelActive = false;\n    }, 100);\n  }\n\n}\n"],"sourceRoot":"/source/"}