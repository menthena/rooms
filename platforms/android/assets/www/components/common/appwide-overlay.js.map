{"version":3,"sources":["app/components/common/appwide-overlay.ts"],"names":["AppwideOverlay","AppwideOverlay.constructor","AppwideOverlay.ngOnInit","AppwideOverlay.confirm","AppwideOverlay.hide"],"mappings":";;;;;;;;;AAAA,qBAAoC,eAAe,CAAC,CAAA;AAGpD,2BAAyB,2BAA2B,CAAC,CAAA;AAErD;IAgCEA,wBAAoBA,UAAsBA;QAAtBC,eAAUA,GAAVA,UAAUA,CAAYA;QACxCA,IAAIA,CAACA,UAAUA,GAAGA,IAAIA,CAACA,UAAUA,CAACA,iBAAiBA,CAACA;IACtDA,CAACA;IAEDD,iCAAQA,GAARA;QAAAE,iBAiBCA;QAhBCA,EAAEA,CAACA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA;YACpBA,IAAIA,CAACA,UAAUA;iBACZA,OAAOA,EAAEA,CAACA;YACbA,IAAIA,CAACA,UAAUA;iBACZA,SAASA,CAACA,UAAAA,GAAGA;gBACZA,EAAEA,CAACA,CAACA,GAAGA,CAACA,IAAIA,KAAKA,MAAMA,CAACA,CAACA,CAACA;oBACxBA,KAAIA,CAACA,aAAaA,GAAGA,IAAIA,CAACA;oBAC1BA,KAAIA,CAACA,SAASA,GAAGA,GAAGA,CAACA,SAASA,CAACA;oBAC/BA,KAAIA,CAACA,OAAOA,GAAGA,GAAGA,CAACA,OAAOA,CAACA;oBAC3BA,KAAIA,CAACA,EAAEA,GAAGA,GAAGA,CAACA,EAAEA,CAACA;oBACjBA,UAAUA,CAACA;wBACTA,KAAIA,CAACA,QAAQA,GAAGA,IAAIA,CAACA;oBACvBA,CAACA,EAAEA,GAAGA,CAACA,CAACA;gBACVA,CAACA;YACHA,CAACA,CAACA,CAACA;QACPA,CAACA;IACHA,CAACA;IAEDF,gCAAOA,GAAPA,UAAQA,YAAqBA;QAC3BG,EAAEA,CAACA,CAACA,YAAYA,CAACA,CAACA,CAACA;YACjBA,IAAIA,CAACA,UAAUA;iBACZA,YAAYA;iBACZA,IAAIA,CAACA;gBACJA,IAAIA,EAAEA,UAAUA;gBAChBA,IAAIA,EAAEA,IAAIA;gBACVA,EAAEA,EAAEA,IAAIA,CAACA,EAAEA;aACZA,CAACA,CAACA;QACPA,CAACA;QACDA,IAAIA,CAACA,IAAIA,EAAEA,CAACA;IACdA,CAACA;IAEDH,6BAAIA,GAAJA;QAAAI,iBAKCA;QAJCA,IAAIA,CAACA,QAAQA,GAAGA,KAAKA,CAACA;QACtBA,UAAUA,CAACA;YACTA,KAAIA,CAACA,aAAaA,GAAGA,KAAKA,CAACA;QAC7BA,CAACA,EAAEA,GAAGA,CAACA,CAACA;IACVA,CAACA;IAzEHJ;QAACA,gBAASA,CAACA;YACTA,QAAQA,EAAEA,iBAAiBA;YAC3BA,QAAQA,EAAEA,4kBAiBTA;YACDA,SAASA,EAAEA,CAACA,mCAAmCA,CAACA;SACjDA,CAACA;QAEDA,iBAAUA,EAAEA;;uBAoDZA;IAADA,qBAACA;;AAADA,CA3EA,AA2ECA,IAAA;AAnDY,sBAAc,iBAmD1B,CAAA","file":"app/components/common/appwide-overlay.js","sourcesContent":["import {Injectable, Component} from 'angular2/core';\nimport {Observable} from 'rxjs';\nimport {RouterLink} from 'angular2/router';\nimport {AppService} from '../../services/AppService';\n\n@Component({\n  selector: 'appwide-overlay',\n  template: `\n    <div class=\"appwide-overlay\" *ngIf=\"isPanelActive\" [class.active]=\"isActive\">\n      <a (click)=\"hide()\" class=\"pull-right hide-button\">\n        <i class=\"fa fa-times\"></i>\n      </a>\n      <div class=\"box text-center\">\n        <div class=\"inner\">\n          <div>\n            {{ message }}\n          </div>\n          <div *ngIf=\"panelType === 'confirmation'\" class=\"buttons\">\n            <a (click)=\"confirm(true)\" class=\"yes\">Yes</a>\n            <a (click)=\"confirm(false)\">No</a>\n          </div>\n        </div>\n      </div>\n    <div>\n  `,\n  styleUrls: ['styles/common/appwide-overlay.css']\n})\n\n@Injectable()\nexport class AppwideOverlay {\n  observable;\n  isActive: boolean;\n  isPanelActive: boolean;\n  panelType: string;\n  message: string;\n  id: string;\n\n  constructor(private AppService: AppService) {\n    this.observable = this.AppService.overlayObservable;\n  }\n\n  ngOnInit() {\n    if (this.observable) {\n      this.observable\n        .connect();\n      this.observable\n        .subscribe(res => {\n          if (res.type === 'show') {\n            this.isPanelActive = true;\n            this.panelType = res.panelType;\n            this.message = res.message;\n            this.id = res.id;\n            setTimeout(() => {\n              this.isActive = true;\n            }, 100);\n          }\n        });\n    }\n  }\n\n  confirm(confirmation: boolean) {\n    if (confirmation) {\n      this.observable\n        .subscription\n        .next({\n          type: 'response',\n          data: true,\n          id: this.id\n        });\n    }\n    this.hide();\n  }\n\n  hide() {\n    this.isActive = false;\n    setTimeout(() => {\n      this.isPanelActive = false;\n    }, 100);\n  }\n\n}\n"],"sourceRoot":"/source/"}