{"version":3,"sources":["app/components/design/edit-element.ts"],"names":["EditElement","EditElement.constructor","EditElement.dismissEditing","EditElement.setIcon","EditElement.submitEditForm","EditElement.ngOnInit"],"mappings":"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","file":"app/components/design/edit-element.js","sourcesContent":["import {Component, Input, OnInit, ElementRef,\n  ViewEncapsulation} from 'angular2/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Validators, FormBuilder} from 'angular2/common';\nimport {IFloorElement} from '../../services/FloorElementsService';\nimport {DesignService} from '../../services/DesignService';\nimport {FloorElementsService} from '../../services/FloorElementsService';\nimport {Slider} from '../form/slider';\nimport {FeatureList} from '../form/feature-list';\n\ndeclare var jQuery: any;\n\n@Component({\n  selector: 'edit-element',\n  directives: [Slider, FeatureList],\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['styles/edit-element.css'],\n  inputs: ['data'],\n  template: `\n    <div class=\"wrapper\">\n      <div class=\"edit-element\" *ngIf=\"editID === data.elementID\"\n      [ngClass]=\"{'active': isActive, 'submitting': isSubmitting, 'element-placeholder': data.elementType === 'placeholder'}\">\n        <form [ngFormModel]=\"editForm\" (ngSubmit)=\"submitEditForm($event)\">\n          <div class=\"heading\">\n            Edit\n          </div>\n\n          <div class=\"form\">\n            <div class=\"input-group\">\n              <label for=\"elementName\">Name</label>\n              <input type=\"text\" name=\"elementName\" ngControl=\"elementName\" id=\"elementName\" placeholder=\"Element name...\" />\n            </div>\n\n            <div *ngIf=\"data.elementType === 'placeholder'\">\n              <div class=\"input-group\">\n                <label>Icon</label>\n                <div class=\"icons\">\n                  <ul class=\"list-unstyled list-inline\">\n                    <li>\n                      <a (click)=\"setIcon(null)\" [class.selected]=\"!data.elementIcon\">None</a>\n                    </li>\n                    <li>\n                      <a (click)=\"setIcon('printer')\" [class.selected]=\"data.elementIcon === 'printer'\">\n                        <i class=\"fa fa-print\"></i> Printer\n                      </a>\n                    </li>\n                    <li>\n                      <a (click)=\"setIcon('information')\" [class.selected]=\"data.elementIcon === 'information'\">\n                        <i class=\"fa fa-info\"></i> Information\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div *ngIf=\"data.elementType === 'room'\">\n              <div class=\"input-group\">\n                <label>Min. capacity: <span class=\"slider-content\">({{ editForm.value.capacity }})</span></label>\n                <slider controlName=\"capacity\" [formModel]=\"editForm\"></slider>\n              </div>\n              <div class=\"input-group\">\n                <label>Features</label>\n                <feature-list controlName=\"features\" [formModel]=\"editForm\"></feature-list>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"buttons\">\n            <a (click)=\"dismissEditing()\"><i class=\"fa fa-times\"></i></a>\n            <a (click)=\"submitEditForm()\" class=\"submit\"><i class=\"fa fa-check\"></i></a>\n          </div>\n        </form>\n      </div>\n    </div>\n  `\n})\n\nexport class EditElement {\n  @Input() data: IFloorElement;\n  designObservable;\n  isSubmitting: boolean;\n  isActive: boolean;\n  editID: boolean;\n  editForm: any;\n  floorElementsObservable;\n\n  constructor(private elementRef: ElementRef, DesignService: DesignService,\n      private fb: FormBuilder, private FloorElementsService: FloorElementsService) {\n    this.designObservable = DesignService.getObservable();\n    this.FloorElementsService = FloorElementsService;\n    this.floorElementsObservable = this.FloorElementsService.getObservable();\n  }\n\n  dismissEditing() {\n    this.isActive = false;\n    setTimeout(() => {\n      this.editID = null;\n    }, 200);\n  }\n\n  setIcon(icon: string) {\n    this.data.elementIcon = icon;\n  }\n\n  submitEditForm() {\n    if (!this.isSubmitting) {\n      this.isSubmitting = true;\n      let data: any = this.editForm.value;\n      data.floorID = this.data.floorID;\n      this.isActive = false;\n      this.FloorElementsService.editElement(this.data.elementID, data);\n      this.floorElementsObservable\n        .delay(100)\n        .subscribe(() => {\n          this.editID = null;\n        }, (err) => {\n          console.log(err);\n        });\n    }\n  }\n\n  ngOnInit() {\n    this.editForm = this.fb.group({\n      elementName: [this.data.elementName],\n      capacity: [this.data.capacity],\n      features: [this.data.features]\n    });\n    this.designObservable\n      .delay(50)\n      .subscribe((res) => {\n        if (res && res.type === 'edit') {\n          this.isActive = true;\n        }\n      });\n    this.designObservable\n      .subscribe(\n        res => {\n          if (res && res.type === 'edit') {\n            this.isActive = false;\n            this.editID = res.data;\n          }\n        }\n      );\n  }\n}\n"],"sourceRoot":"/source/"}