{"version":3,"sources":["app/services/FloorElementsService.ts"],"names":["FloorElementsService","FloorElementsService.constructor","FloorElementsService.getObservable","FloorElementsService.editElement","FloorElementsService.addElement","FloorElementsService.deleteElement","FloorElementsService.fetchElementsByFloorID"],"mappings":"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","file":"app/services/FloorElementsService.js","sourcesContent":["import {Injectable} from 'angular2/core';\nimport {Observable} from 'rxjs';\nimport {Http, Response, Headers} from 'angular2/http';\nimport {ENV_URL} from '../app.config';\n\ndeclare var _: any;\n\ninterface IFloorElementsService<T> {\n  getObservable() : any;\n  addElement(element: T) : void;\n  editElement(elementID: string, element: T) : void;\n  deleteElement(floorID: string, elementID: string) : void;\n  fetchElementsByFloorID(floorID: string) : void;\n}\n\nexport interface IFloorElement {\n  elementID: string;\n  floorID: string;\n  elementName: string;\n  elementType: string;\n  elementPositionX: number;\n  elementPositionY: number;\n  elementWidth: number;\n  elementHeight: number;\n  elementVertical?: boolean;\n  elementIcon?: string;\n  features: string;\n  capacity?: number;\n}\n\n@Injectable()\nexport class FloorElementsService implements IFloorElementsService<IFloorElement> {\n  floorElements: Array<IFloorElement>;\n  floorElementsObservable: any;\n\n  constructor(private http: Http) {\n    this.floorElements = new Array<IFloorElement>();\n    this.floorElementsObservable = Observable\n      .create(observer => {\n        return () => console.log('disposed');\n      }).publish();\n  }\n\n  getObservable() : Observable<Array<IFloorElement>> {\n    return this.floorElementsObservable;\n  }\n\n  editElement(elementID, element) {\n    this.floorElementsObservable.subscription.next({ type: 'loading' });\n    this.http.patch(ENV_URL + '/api/floor/' + element.floorID + '/elements/' + elementID, JSON.stringify(element), {\n      headers: new Headers({ 'Content-Type': 'application/json' })\n    })\n    .delay(300)\n    .subscribe((res: any) => {\n      let floorElement = res.json().data;\n      let index = _.findIndex(this.floorElements, {elementID: elementID});\n      this.floorElements[index] = floorElement;\n      this.floorElementsObservable.subscription.next({\n        type: 'data',\n        data: this.floorElements\n      });\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n  addElement(element) {\n    this.floorElementsObservable.subscription.next({ type: 'loading' });\n\n    this.http.post(ENV_URL + '/api/floor/' + element.floorID + '/elements', JSON.stringify(element), {\n      headers: new Headers({ 'Content-Type': 'application/json' })\n    })\n    .delay(400)\n    .subscribe((res: any) => {\n      let floorElement = res.json().data;\n      this.floorElements.push(floorElement);\n      this.floorElementsObservable.subscription.next({\n        type: 'data',\n        data: this.floorElements\n      });\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n  deleteElement(floorID: string, elementID: string) {\n    this.floorElementsObservable.subscription.next({ type: 'loading' });\n\n    this.http.delete('/api/floor/' + floorID + '/elements/' + elementID, {\n      headers: new Headers({ 'Content-Type': 'application/json' })\n    })\n    .delay(400)\n    .subscribe((res: any) => {\n      _.remove(this.floorElements, (element) => {\n        return String(element.elementID) === String(elementID);\n      });\n      this.floorElementsObservable.subscription.next({\n        type: 'data',\n        data: this.floorElements\n      });\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n  fetchElementsByFloorID(floorID: string) {\n    let observable = this.http.get('/api/floor/' + floorID + '/elements');\n    observable.subscribe((res) => {\n      let elementsJson: any = res.json();\n      this.floorElements = elementsJson.data;\n    }, (err) => {\n      console.log(err);\n    });\n    return observable;\n  }\n}\n"],"sourceRoot":"/source/"}