{"version":3,"sources":["app/services/FloorElementsService.ts"],"names":["FloorElementsService","FloorElementsService.constructor","FloorElementsService.getObservable","FloorElementsService.editElement","FloorElementsService.addElement","FloorElementsService.deleteElement","FloorElementsService.fetchElementsByFloorID"],"mappings":"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","file":"app/services/FloorElementsService.js","sourcesContent":["import {Injectable} from 'angular2/core';\nimport {Observable} from 'rxjs';\nimport {Http, Response, Headers} from 'angular2/http';\nimport {ENV_URL} from '../config/app.config';\n\ndeclare var _: any;\n\ninterface IFloorElementsService<T> {\n  getObservable() : any;\n  addElement(element: T) : void;\n  editElement(elementID: string, element: T) : void;\n  deleteElement(floorID: string, elementID: string) : void;\n  fetchElementsByFloorID(floorID: string) : void;\n}\n\nexport interface IFloorElement {\n  elementID: string;\n  floorID: string;\n  elementName: string;\n  elementType: string;\n  elementPositionX: number;\n  elementPositionY: number;\n  elementWidth: number;\n  elementHeight: number;\n  elementVertical?: boolean;\n  elementIcon?: string;\n  features: string;\n  capacity?: number;\n}\n\n@Injectable()\nexport class FloorElementsService implements IFloorElementsService<IFloorElement> {\n  floorElements: Array<IFloorElement>;\n  floorElementsObservable: any;\n\n  constructor(private http: Http) {\n    this.floorElements = new Array<IFloorElement>();\n    this.floorElementsObservable = Observable\n      .create(observer => {\n        return () => console.log('disposed');\n      }).publish();\n    // TODO: Use official Angular2 CORS support when merged (https://github.com/angular/angular/issues/4231).\n    if ((<any> this.http)._backend._browserXHR) {\n      let _build = (<any> this.http)._backend._browserXHR.build;\n      (<any> this.http)._backend._browserXHR.build = () => {\n        let _xhr =  _build();\n        _xhr.withCredentials = true;\n        return _xhr;\n      };\n    }\n  }\n\n  getObservable() : Observable<Array<IFloorElement>> {\n    return this.floorElementsObservable;\n  }\n\n  editElement(elementID, element) {\n    this.floorElementsObservable.subscription.next({ type: 'loading' });\n    this.http.patch(ENV_URL + '/api/floor/' + element.floorID + '/elements/' + elementID, JSON.stringify(element), {\n      headers: new Headers({ 'Content-Type': 'application/json' })\n    })\n    .delay(300)\n    .subscribe((res: any) => {\n      let floorElement = res.json().data;\n      let index = _.findIndex(this.floorElements, {elementID: elementID});\n      this.floorElements[index] = floorElement;\n      this.floorElementsObservable.subscription.next({\n        type: 'data',\n        data: this.floorElements\n      });\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n  addElement(element) {\n    this.floorElementsObservable.subscription.next({ type: 'loading' });\n\n    this.http.post(ENV_URL + '/api/floor/' + element.floorID + '/elements', JSON.stringify(element), {\n      headers: new Headers({ 'Content-Type': 'application/json' })\n    })\n    .delay(400)\n    .subscribe((res: any) => {\n      let floorElement = res.json().data;\n      this.floorElements.push(floorElement);\n      this.floorElementsObservable.subscription.next({\n        type: 'data',\n        data: this.floorElements\n      });\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n  deleteElement(floorID: string, elementID: string) {\n    this.floorElementsObservable.subscription.next({ type: 'loading' });\n\n    this.http.delete(ENV_URL + '/api/floor/' + floorID + '/elements/' + elementID, {\n      headers: new Headers({ 'Content-Type': 'application/json' })\n    })\n    .delay(400)\n    .subscribe((res: any) => {\n      _.remove(this.floorElements, (element) => {\n        return String(element.elementID) === String(elementID);\n      });\n      this.floorElementsObservable.subscription.next({\n        type: 'data',\n        data: this.floorElements\n      });\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n  fetchElementsByFloorID(floorID: string) {\n    let observable = this.http.get(ENV_URL + '/api/floor/' + floorID + '/elements');\n    observable.subscribe((res) => {\n      let elementsJson: any = res.json();\n      this.floorElements = elementsJson.data;\n    }, (err) => {\n      console.log(err);\n    });\n    return observable;\n  }\n}\n"],"sourceRoot":"/source/"}