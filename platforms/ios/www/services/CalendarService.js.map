{"version":3,"sources":["app/services/CalendarService.ts"],"names":["CalendarService","CalendarService.constructor","CalendarService.addEvent","CalendarService.removeEvent","CalendarService.fetchCalendars","CalendarService.fetchEvents","CalendarService.saveGoogleToken","CalendarService.authorize","CalendarService.loadCalendar"],"mappings":"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","file":"app/services/CalendarService.js","sourcesContent":["import {Injectable} from 'angular2/core';\nimport {Observable} from 'rxjs';\nimport {Http, Response, Headers} from 'angular2/http';\nimport {CLIENT_ID, SCOPES} from '../config/constants';\n\ndeclare var gapi: any;\n\ninterface ICalendarService {\n  saveGoogleToken(token: String);\n  authorize(callback: Function);\n  loadCalendar();\n  fetchCalendars();\n  fetchEvents();\n  addEvent(event: Object);\n  removeEvent(event: Object);\n}\n\n@Injectable()\nexport class CalendarService implements ICalendarService {\n\n  constructor(private http: Http) {\n    // TODO: Use official Angular2 CORS support when merged (https://github.com/angular/angular/issues/4231).\n    if ((<any> this.http)._backend._browserXHR) {\n      let _build = (<any> this.http)._backend._browserXHR.build;\n      (<any> this.http)._backend._browserXHR.build = () => {\n        let _xhr =  _build();\n        _xhr.withCredentials = true;\n        return _xhr;\n      };\n    }\n  }\n\n  addEvent(event) {\n    console.log('tick');\n  }\n\n  removeEvent(event) {\n    console.log('tick');\n  }\n\n  fetchCalendars() {\n    var request = gapi.client.calendar.events.list({\n      'calendarId': 'primary',\n      'timeMin': (new Date()).toISOString(),\n      'showDeleted': false,\n      'singleEvents': true,\n      'maxResults': 10,\n      'orderBy': 'startTime'\n    });\n\n    request.execute((resp) => {\n      var events = resp.items;\n      if (events.length > 0) {\n        for (let i = 0; i < events.length; i++) {\n          var event = events[i];\n          var when = event.start.dateTime;\n          if (!when) {\n            when = event.start.date;\n          }\n          console.log(event.summary + ' (' + when + ')');\n        }\n      } else {\n        console.log('No upcoming events found.');\n      }\n    });\n  }\n\n  fetchEvents() {\n    this.authorize(() => {\n      var request = gapi.client.calendar.events.list({\n        'calendarId': 'primary',\n        'timeMin': (new Date()).toISOString(),\n        'showDeleted': false,\n        'singleEvents': true,\n        'maxResults': 10,\n        'orderBy': 'startTime'\n      });\n\n      request.execute((resp) => {\n        var events = resp.items;\n        if (events.length > 0) {\n          for (let i = 0; i < events.length; i++) {\n            var event = events[i];\n            var when = event.start.dateTime;\n            if (!when) {\n              when = event.start.date;\n            }\n            console.log(event.summary + ' (' + when + ')');\n          }\n        } else {\n          console.log('No upcoming events found.');\n        }\n      });\n    });\n  }\n\n\n  saveGoogleToken(token) {\n    this.http.patch('/api/company', JSON.stringify({\n      googleToken: token\n    }), {\n      headers: new Headers({ 'Content-Type': 'application/json' })\n    }).subscribe((res) => {\n      console.log(res);\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n  authorize(callback: Function) {\n    if (gapi) {\n      gapi.auth.authorize({\n        client_id: CLIENT_ID,\n        scope: SCOPES,\n        immediate: false\n      }, (res) => {\n        this.saveGoogleToken(res.access_token);\n        this.loadCalendar();\n        callback(res);\n      });\n    }\n  }\n\n  loadCalendar() {\n    gapi.client.load('calendar', 'v3', () => {\n      console.log('tick');\n    });\n  }\n\n}\n"],"sourceRoot":"/source/"}