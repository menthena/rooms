{"version":3,"sources":["app/services/ReservationService.ts"],"names":["ReservationService","ReservationService.constructor","ReservationService.updateTime","ReservationService.fetchReservations","ReservationService.cancelReservation","ReservationService.makeReservation","ReservationService.transformFilter","ReservationService.saveFilter","ReservationService.getReservationFilterObserver","ReservationService.getObservable"],"mappings":"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","file":"app/services/ReservationService.js","sourcesContent":["import {Injectable} from 'angular2/core';\nimport {Http, Response, Headers} from 'angular2/http';\nimport {Observable} from 'rxjs';\nimport {FloorElementsService} from './FloorElementsService';\nimport {DATE_FORMAT} from '../config/constants';\nimport {ENV_URL} from '../config/app.config';\n\ndeclare var moment: any;\ndeclare var _: any;\ndeclare var window: any;\n\nexport interface IReservation {\n  reservationID: string;\n  elementID: string;\n  reservationDate: string;\n  reservationEndDate: string;\n  description: string;\n}\n\ninterface IReservationService {\n  saveFilter(filter: Object) : any;\n  fetchReservations() : Observable<Object>;\n  cancelReservation(reservationID: string, recurring?: boolean) : void;\n  transformFilter(filter: Object) : Object;\n  makeReservation(reservation: Object) : void;\n  getReservationFilterObserver(): Observable<Object>;\n  updateTime() : string;\n  getObservable() : Observable<string>;\n}\n\n@Injectable()\nexport class ReservationService implements IReservationService {\n  public reservationTime: string;\n  public reservations: Array<IReservation>;\n  public filter: any;\n  reservationObserver;\n  reservationFilterObserver: any;\n  floorElementsObservable;\n\n  constructor(private http: Http, FloorElementsService: FloorElementsService) {\n    this.filter = {\n      duration: 30,\n      capacity: 12,\n      features: [],\n      date: moment()\n    };\n    this.floorElementsObservable = FloorElementsService.getObservable();\n    this.floorElementsObservable.connect();\n    this.floorElementsObservable\n      .subscribe(res => {\n        console.log(res);\n      });\n    this.reservationObserver = Observable\n      .create(() => {\n        return;\n      }).publish();\n    this.reservationFilterObserver = Observable\n      .create(() => {\n        return;\n      }).publish();\n    this.reservationFilterObserver.connect();\n    this.reservationFilterObserver.subscribe(\n      res => {\n        this.saveFilter(res);\n      }\n    );\n    // TODO: Use official Angular2 CORS support when merged (https://github.com/angular/angular/issues/4231).\n    if ((<any> this.http)._backend._browserXHR) {\n      let _build = (<any> this.http)._backend._browserXHR.build;\n      (<any> this.http)._backend._browserXHR.build = () => {\n        let _xhr =  _build();\n        _xhr.withCredentials = true;\n        return _xhr;\n      };\n    }\n  }\n\n  updateTime() {\n    this.filter.time = moment().add(10, 'minutes').format('h:mma');\n    return this.filter.time;\n  }\n\n  fetchReservations() {\n    let observable = this.http.get(ENV_URL + '/api/reservation', {\n      headers: new Headers({ Authorization: 'Basic ' + window.btoa('asd@asd.com:asdasd') })\n    });\n    observable\n      .subscribe((res) => {\n        let reservation: any = res.json();\n        this.reservations = reservation.data;\n        if (this.reservationObserver.subscription) {\n          this.reservationObserver\n            .subscription\n            .next({\n              type: 'reservation',\n              data: this.reservations\n            });\n        }\n      }, (err) => {\n        console.log(err);\n      });\n    return observable;\n  }\n\n  cancelReservation(reservationID: string, recurring?: boolean) {\n    let observable = this.http.delete(ENV_URL + '/api/reservation/' + reservationID + '?recurring=' + recurring);\n    let subscription = observable\n      .subscribe((res) => {\n        let reservation: any = res.json();\n        this.reservations = reservation.data;\n        if (this.reservationObserver.subscription) {\n          // TODO: Refactor\n          this.reservationObserver\n            .subscription\n            .next({\n              type: 'reservation',\n              data: this.reservations\n            });\n        }\n      }, (err) => {\n        console.log(err);\n      });\n    return subscription;\n  }\n\n  makeReservation(reservation: Object) {\n    this.floorElementsObservable.subscription.next({ type: 'loading' });\n    this.filter = _.extend(this.filter, reservation);\n    console.log(this.filter, reservation);\n\n    let observable: any = this.http.post(ENV_URL + '/api/reservation', JSON.stringify(this.filter), {\n      headers: new Headers({ 'Content-Type': 'application/json' })\n    });\n    let subscription = observable\n      .delay(400)\n      .subscribe((res: any) => {\n        let data = res.json().data;\n        this.floorElementsObservable.subscription.next({\n          type: 'reservation',\n          data: data\n        });\n      });\n    return subscription;\n  }\n\n  transformFilter(filter) {\n    let filterDate = moment(filter.date + ' ' + filter.time, DATE_FORMAT);\n    return {\n      reservationDate: filterDate,\n      reservationEndDate: moment(filterDate).add(filter.duration, 'minutes'),\n      capacity: filter.capacity,\n      features: filter.features,\n      time: filter.time,\n      date: moment(filter.date, DATE_FORMAT)\n    };\n  }\n\n  saveFilter(filter) {\n    if (filter) {\n      this.filter = this.transformFilter(filter);\n      if (filter.time) {\n        this.reservationTime = filter.time + ' - ' +\n          moment(filter.date + ' ' + filter.time, DATE_FORMAT)\n            .add(filter.duration, 'minutes').format('h:mma');\n      }\n    }\n  }\n\n  getReservationFilterObserver() {\n    return this.reservationFilterObserver;\n  }\n\n  getObservable() {\n    return this.reservationObserver;\n  }\n}\n"],"sourceRoot":"/source/"}