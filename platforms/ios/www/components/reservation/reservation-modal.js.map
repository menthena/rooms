{"version":3,"sources":["app/components/reservation/reservation-modal.ts"],"names":["ReservationModal","ReservationModal.constructor","ReservationModal.dismissBooking","ReservationModal.submitReservationForm","ReservationModal.ngOnChanges","ReservationModal.ngOnInit"],"mappings":"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","file":"app/components/reservation/reservation-modal.js","sourcesContent":["import {Component,   Input, OnInit,\n  ElementRef, ViewEncapsulation} from 'angular2/core';\nimport {Validators, FormBuilder} from 'angular2/common';\nimport {DatePicker} from '../form/date-picker';\nimport {SelectMenu} from '../form/select-menu';\nimport {Observable} from 'rxjs';\nimport {IFloorElement} from '../../services/FloorElementsService';\nimport {TimePicker} from '../form/time-picker';\nimport {Button} from '../form/button';\nimport {DATE_ONLY_FORMAT, INTERVAL_DATA} from '../../config/constants';\nimport {IReservation, ReservationService} from '../../services/ReservationService';\n\ndeclare var jQuery: any;\ndeclare var moment: any;\n\n@Component({\n  selector: 'reservation-modal',\n  directives: [DatePicker, SelectMenu, Button, TimePicker],\n  styleUrls: ['styles/reservation-modal.css'],\n  encapsulation: ViewEncapsulation.None,\n  inputs: ['data', 'formData', 'activeReservation'],\n  template: `\n    <div class=\"wrapper\">\n      <div class=\"booking\" *ngIf=\"reserveID === data.elementID\" [ngClass]=\"{'active': isActive, 'submitting': isSubmitting}\">\n        <form [ngFormModel]=\"reserveForm\" (submit)=\"submitReservationForm($event)\">\n          <div *ngIf=\"!activeReservation\">\n            <div class=\"heading\">\n              Booking room / {{ data.elementName }}\n            </div>\n            <div class=\"time\">\n              <div>\n                <i class=\"fa fa-calendar\"></i>\n                <strong>{{ reservationDate }}</strong>\n              </div>\n              <div>\n                <i class=\"fa fa-clock-o\"></i>\n                {{ reservationTime }}\n              </div>\n            </div>\n          </div>\n\n          <div *ngIf=\"activeReservation\">\n            <div class=\"heading\">\n              Edit reservation\n            </div>\n\n            <div class=\"row form-element\">\n              <div class=\"col-xs-4\">\n                <label for=\"from\">From</label>\n                <input type=\"hidden\" id=\"from\" name=\"from\" ngControl=\"from\" value=\"\">\n                <time-picker controlName=\"from\" [formModel]=\"reserveForm\" class-name=\"reservation-modal\"></time-picker>\n              </div>\n\n              <div class=\"col-xs-4\">\n                <label for=\"to\">To</label>\n                <input type=\"hidden\" id=\"to\" name=\"to\" ngControl=\"to\" value=\"\">\n                <time-picker controlName=\"to\" [formModel]=\"reserveForm\" class-name=\"reservation-modal\"></time-picker>\n              </div>\n            </div>\n\n\n          </div>\n          <div class=\"form-element\">\n            <label for=\"description\">Description</label>\n            <textarea name=\"description\" ngControl=\"description\" id=\"description\" placeholder=\"Enter description...\"></textarea>\n          </div>\n\n          <div class=\"form-element recurring\">\n              <input button type=\"checkbox\" name=\"recurring\" id=\"recurring\"\n                ngControl=\"recurring\" [formModel]=\"reserveForm\">\n              <label for=\"recurring\">\n                Recurring\n              </label>\n\n          </div>\n\n          <div class=\"row form-element\" *ngIf=\"reserveForm.value.recurring\">\n            <div class=\"col-xs-6\">\n              <label for=\"from\">Interval</label>\n              <select controlName=\"interval\" [formModel]=\"reserveForm\" name=\"interval\" id=\"interval\" select-menu>\n                <option *ngFor=\"#item of intervalData\" value=\"{{ item.value }}\">{{ item.text }}</option>\n              </select>\n            </div>\n\n            <div class=\"col-xs-6\">\n              <label for=\"to\">Until</label>\n              <input type=\"hidden\" id=\"until\" name=\"until\" ngControl=\"until\" value=\"\">\n              <date-picker controlName=\"until\" [formModel]=\"reserveForm\" [data]=\"filter\"></date-picker>\n            </div>\n          </div>\n\n          <div class=\"buttons\">\n            <a (click)=\"dismissBooking()\"><i class=\"fa fa-times\"></i></a>\n            <a (click)=\"submitReservationForm()\"><i class=\"fa fa-check\"></i></a>\n          </div>\n        </form>\n      </div>\n    </div>\n  `\n})\n\nexport class ReservationModal implements OnInit {\n  @Input() data: IFloorElement;\n  @Input() activeReservation: IReservation;\n  reserveID: string;\n  isActive: boolean;\n  isSubmitting: boolean;\n  reserveForm: any;\n  reservationDate: string;\n  reservationTime: string;\n  reservationObserver;\n  reservationFilterObserver;\n  intervalData;\n\n  constructor(private elementRef: ElementRef, private ReservationService: ReservationService, private fb: FormBuilder) {\n    this.reservationFilterObserver = ReservationService.getReservationFilterObserver();\n    this.reservationTime = ReservationService.reservationTime;\n    if (this.ReservationService.filter.reservationDate) {\n      this.reservationDate = this.ReservationService.filter.reservationDate.format(DATE_ONLY_FORMAT);\n    }\n    this.reservationObserver = ReservationService.getObservable();\n    this.isActive = false;\n    this.intervalData = INTERVAL_DATA;\n  }\n\n  dismissBooking() {\n    if (!this.isSubmitting) {\n      this.isActive = false;\n      setTimeout(() => {\n        this.reservationObserver\n          .subscription\n          .next();\n        this.reserveID = null;\n      }, 200);\n    }\n  }\n\n  submitReservationForm() {\n    if (!this.isSubmitting) {\n      this.isSubmitting = true;\n      this.ReservationService.makeReservation({\n          elementID: this.data.elementID,\n          description: this.reserveForm.value.description,\n          recurring: this.reserveForm.value.recurring,\n          interval: this.reserveForm.value.interval,\n          until: moment(this.reserveForm.value.until, DATE_ONLY_FORMAT)\n        })\n        .add(() => {\n          this.reservationObserver\n            .subscription\n            .next();\n          this.isSubmitting = false;\n        });\n    }\n  }\n\n  ngOnChanges() {\n    if (this.activeReservation) {\n      let description = this.activeReservation.description;\n      let reservationDate = moment.utc(this.activeReservation.reservationDate);\n      let reservationEndDate = moment.utc(this.activeReservation.reservationEndDate);\n      this.reserveForm = this.fb.group({\n        description: [description],\n        from: [reservationDate.format('h:mma')],\n        to: [reservationEndDate.format('h:mma')]\n      });\n    } else {\n      this.reserveForm = this.fb.group({\n        description: [''],\n        from: [''],\n        to: [''],\n        recurring: [false],\n        interval: ['day'],\n        until: ['']\n      });\n    }\n    this.reserveForm.valueChanges\n    .subscribe((res) => {\n      this.reserveForm.value = res;\n    });\n  }\n\n  ngOnInit() {\n    this.reservationObserver\n      .delay(50)\n      .subscribe(() => {\n        this.isActive = true;\n      });\n    this.reservationFilterObserver\n      .subscribe(() => {\n        this.reservationTime = this.ReservationService.reservationTime;\n        this.reservationDate = this.ReservationService.filter.reservationDate.format(DATE_ONLY_FORMAT);\n      });\n    this.reservationObserver\n      .subscribe(\n        res => {\n          this.isActive = false;\n          this.reserveID = res;\n        }\n      );\n  }\n}\n"],"sourceRoot":"/source/"}