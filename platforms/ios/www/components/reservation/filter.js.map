{"version":3,"sources":["app/components/reservation/filter.ts"],"names":["Filter","Filter.constructor","Filter.updateTime","Filter.updateForm","Filter.ngOnChanges","Filter.ngOnInit"],"mappings":"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","file":"app/components/reservation/filter.js","sourcesContent":["import {Component, OnInit, ElementRef, ViewEncapsulation, Output,\n  OnChanges, EventEmitter} from 'angular2/core';\nimport {FormBuilder, ControlGroup} from 'angular2/common';\nimport {DatePicker} from '../form/date-picker';\nimport {TimePicker} from '../form/time-picker';\nimport {ReservationService} from '../../services/ReservationService';\nimport {DURATION_DATA, DATE_FORMAT} from '../../config/constants';\nimport {SelectMenu} from '../form/select-menu';\nimport {Slider} from '../form/slider';\nimport {FeatureList} from '../form/feature-list';\nimport {Button} from '../form/button';\nimport {Observable} from 'rxjs';\n\ndeclare var jQuery:any;\ndeclare var moment:any;\n\n@Component({\n  directives: [DatePicker, SelectMenu, Slider, Button, FeatureList, TimePicker],\n  selector: 'element-filter',\n  // TODO:\n  // outputs: ['form'],\n  template: `\n  <div class=\"filter\">\n    <form [ngFormModel]=\"filterForm\" (ngSubmit)=\"submitFilterForm($event)\">\n      <h1>Reserve a room</h1>\n\n      <ul class=\"list-unstyled row\">\n        <li class=\"col-sm-12 col-xs-6 with-icon\">\n          <div class=\"input-group\">\n            <input type=\"hidden\" id=\"date\" name=\"date\" ngControl=\"date\" value=\"\">\n            <label for=\"date\">Date</label>\n            <date-picker controlName=\"date\" [formModel]=\"filterForm\" [data]=\"filter\"></date-picker>\n          </div>\n        </li>\n        <li class=\"col-sm-12 col-xs-6 with-icon time\">\n          <div class=\"input-group\">\n            <label for=\"time\">Time</label>\n            <i class=\"fa fa-clock-o\"></i>\n            <input type=\"hidden\" id=\"time\" name=\"time\" ngControl=\"time\" value=\"\">\n            <time-picker controlName=\"time\" [formModel]=\"filterForm\" [data]=\"filter\"></time-picker>\n          </div>\n        </li>\n        <li class=\"col-sm-12 col-xs-6\">\n          <div class=\"input-group\">\n            <label for=\"duration\">Duration</label>\n            <input type=\"hidden\" id=\"duration\" name=\"duration\" ngControl=\"duration\" value=\"\">\n            <select controlName=\"duration\" [formModel]=\"filterForm\" name=\"duration\" id=\"duration\" select-menu>\n              <option *ngFor=\"#item of durationData\" value=\"{{ item.value }}\">{{ item.text }}</option>\n            </select>\n          </div>\n        </li>\n        <li class=\"col-sm-12 col-xs-6\">\n          <div class=\"input-group\">\n            <label>Min. capacity:<span class=\"slider-content\">({{ filterForm.value.capacity }})</span></label>\n            <input type=\"hidden\" id=\"capacity\" name=\"capacity\" ngControl=\"capacity\" value=\"\">\n            <slider range=\"true\" min=\"1\" max=\"60\" controlName=\"capacity\" [formModel]=\"filterForm\"></slider>\n          </div>\n        </li>\n        <li class=\"col-sm-12 col-xs-6\">\n          <div class=\"input-group\">\n            <label>Filter</label>\n            <input type=\"hidden\" id=\"features\" name=\"features\" ngControl=\"features\" value=\"\">\n            <feature-list controlName=\"features\" [formModel]=\"filterForm\"></feature-list>\n          </div>\n        </li>\n      </ul>\n    </form>\n  </div>\n  `,\n  styleUrls: ['styles/filter.css']\n})\n\nexport class Filter implements OnInit, OnChanges {\n  filterForm: ControlGroup;\n  filter: Object;\n  durationData: any;\n  timeData: any;\n  time: any;\n  today: any;\n  @Output() form = new EventEmitter();\n\n  constructor(private fb: FormBuilder, private ReservationService: ReservationService) {\n    this.durationData = DURATION_DATA;\n    this.updateTime();\n    Observable.timer(6000, 6000)\n      .subscribe(() => {\n        if (moment().diff(moment(this.time, 'h:mma')) > 0) {\n          this.updateTime();\n          this.updateForm();\n        }\n      });\n  }\n\n  updateTime() {\n    this.time = this.ReservationService.updateTime();\n    if (this.filterForm) {\n      this.filterForm.value.time = this.time;\n    }\n  }\n\n  updateForm() {\n    this.form.next(this.filterForm.value);\n  }\n\n  ngOnChanges() {\n    console.log('tick');\n  }\n\n  ngOnInit() {\n    this.filterForm = this.fb.group({\n      date: [this.ReservationService.filter.date.format('DD/MM/YYYY')],\n      time: [this.time],\n      duration: [this.ReservationService.filter.duration],\n      capacity: [this.ReservationService.filter.capacity],\n      features: [this.ReservationService.filter.feature]\n    });\n    // this.filter = {\n    //   date: this.ReservationService.filter.date.format('DD/MM/YYYY'),\n    //   time: this.time,\n    //   duration: this.ReservationService.filter.duration,\n    //   capacity: this.ReservationService.filter.capacity,\n    //   features: this.ReservationService.filter.feature\n    // };\n    this.filterForm.valueChanges\n      .subscribe(\n        res => {\n          this.form.emit(res);\n        }\n      );\n    this.updateForm();\n  }\n}\n"],"sourceRoot":"/source/"}