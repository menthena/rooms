{"version":3,"sources":["app/components/common/overlay.ts"],"names":["Overlay","Overlay.constructor","Overlay.ngOnInit"],"mappings":";;;;;;;;;AAAA,qBAAwB,eAAe,CAAC,CAAA;AAGxC,mCAAiC,mCAAmC,CAAC,CAAA;AAGrE;IAeEA,iBAAoBA,kBAAsCA;QAAtCC,uBAAkBA,GAAlBA,kBAAkBA,CAAoBA;QACxDA,IAAIA,CAACA,qBAAqBA,GAAGA,IAAIA,CAACA,kBAAkBA,CAACA,aAAaA,EAAEA,CAACA;IACvEA,CAACA;IAEDD,0BAAQA,GAARA;QAAAE,iBAiBCA;QAhBCA,IAAIA,CAACA,qBAAqBA;aACvBA,OAAOA,EAAEA,CAACA;QACbA,IAAIA,CAACA,qBAAqBA;aACvBA,SAASA,CAACA,UAAAA,GAAGA;YACZA,EAAEA,CAACA,CAACA,OAAOA,GAAGA,KAAKA,QAAQA,CAACA,CAACA,CAACA;gBAC5BA,KAAIA,CAACA,aAAaA,GAAGA,IAAIA,CAACA;gBAC1BA,UAAUA,CAACA;oBACTA,KAAIA,CAACA,QAAQA,GAAGA,IAAIA,CAACA;gBACvBA,CAACA,EAAEA,GAAGA,CAACA,CAACA;YACVA,CAACA;YAACA,IAAIA,CAACA,CAACA;gBACNA,KAAIA,CAACA,QAAQA,GAAGA,KAAKA,CAACA;gBACtBA,UAAUA,CAACA;oBACTA,KAAIA,CAACA,aAAaA,GAAGA,KAAKA,CAACA;gBAC7BA,CAACA,EAAEA,GAAGA,CAACA,CAACA;YACVA,CAACA;QACHA,CAACA,CAACA,CAACA;IACPA,CAACA;IApCHF;QAACA,gBAASA,CAACA;YACTA,QAAQA,EAAEA,SAASA;YACnBA,SAASA,EAAEA,EAAEA;YACbA,QAAQA,EAAEA,kGAGTA;YACDA,SAASA,EAAEA,CAACA,2BAA2BA,CAACA;SACzCA,CAACA;;gBA6BDA;IAADA,cAACA;;AAADA,CArCA,AAqCCA,IAAA;AA3BY,eAAO,UA2BnB,CAAA","file":"app/components/common/overlay.js","sourcesContent":["import {Component} from 'angular2/core';\nimport {RouterLink} from 'angular2/router';\nimport {DesignService} from '../../services/DesignService';\nimport {ReservationService} from '../../services/ReservationService';\nimport {FloorElementsService} from '../../services/FloorElementsService';\n\n@Component({\n  selector: 'overlay',\n  providers: [],\n  template: `\n    <div class=\"overlay\" *ngIf=\"isPanelActive\" [class.active]=\"isActive\">\n    <div>\n  `,\n  styleUrls: ['styles/common/overlay.css']\n})\n\nexport class Overlay {\n  isActive: boolean;\n  isPanelActive: boolean;\n  reservationObservable: any;\n\n  constructor(private ReservationService: ReservationService) {\n    this.reservationObservable = this.ReservationService.getObservable();\n  }\n\n  ngOnInit() {\n    this.reservationObservable\n      .connect();\n    this.reservationObservable\n      .subscribe(res => {\n        if (typeof res === 'string') {\n          this.isPanelActive = true;\n          setTimeout(() => {\n            this.isActive = true;\n          }, 100);\n        } else {\n          this.isActive = false;\n          setTimeout(() => {\n            this.isPanelActive = false;\n          }, 100);\n        }\n      });\n  }\n}\n"],"sourceRoot":"/source/"}