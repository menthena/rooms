{"version":3,"sources":["app/services/ReservationService.ts"],"names":["ReservationService","ReservationService.constructor","ReservationService.updateTime","ReservationService.fetchReservations","ReservationService.cancelReservation","ReservationService.makeReservation","ReservationService.transformFilter","ReservationService.saveFilter","ReservationService.getReservationFilterObserver","ReservationService.getObservable"],"mappings":"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","file":"app/services/ReservationService.js","sourcesContent":["import {Injectable} from 'angular2/core';\nimport {Http, Response, Headers} from 'angular2/http';\nimport {Observable} from 'rxjs';\nimport {FloorElementsService} from './FloorElementsService';\nimport {DATE_FORMAT} from '../constants';\nimport {ENV_URL} from '../app.config';\n\ndeclare var moment: any;\ndeclare var _: any;\ndeclare var window: any;\n\nexport interface IReservation {\n  reservationID: string;\n  elementID: string;\n  reservationDate: string;\n  reservationEndDate: string;\n  description: string;\n}\n\ninterface IReservationService {\n  saveFilter(filter: Object) : any;\n  fetchReservations() : Observable<Object>;\n  cancelReservation(reservationID: string, recurring?: boolean) : void;\n  transformFilter(filter: Object) : Object;\n  makeReservation(reservation: Object) : void;\n  getReservationFilterObserver(): Observable<Object>;\n  updateTime() : string;\n  getObservable() : Observable<string>;\n}\n\n@Injectable()\nexport class ReservationService implements IReservationService {\n  public reservationTime: string;\n  public reservations: Array<IReservation>;\n  public filter: any;\n  reservationObserver;\n  reservationFilterObserver: any;\n  floorElementsObservable;\n\n  constructor(private http: Http, FloorElementsService: FloorElementsService) {\n    this.filter = {\n      duration: 30,\n      capacity: 12,\n      features: [],\n      date: moment()\n    };\n    this.floorElementsObservable = FloorElementsService.getObservable();\n    this.floorElementsObservable.connect();\n    this.floorElementsObservable\n      .subscribe(res => {\n        console.log(res);\n      });\n    this.reservationObserver = Observable\n      .create(() => {\n        return;\n      }).publish();\n    this.reservationFilterObserver = Observable\n      .create(() => {\n        return;\n      }).publish();\n    this.reservationFilterObserver.connect();\n    this.reservationFilterObserver.subscribe(\n      res => {\n        this.saveFilter(res);\n      }\n    );\n    // TODO: Use official Angular2 CORS support when merged (https://github.com/angular/angular/issues/4231).\n    if ((<any> this.http)._backend._browserXHR) {\n      let _build = (<any> this.http)._backend._browserXHR.build;\n      (<any> this.http)._backend._browserXHR.build = () => {\n        let _xhr =  _build();\n        _xhr.withCredentials = true;\n        return _xhr;\n      };\n    }\n  }\n\n  updateTime() {\n    this.filter.time = moment().add(10, 'minutes').format('h:mma');\n    return this.filter.time;\n  }\n\n  fetchReservations() {\n    let observable = this.http.get(ENV_URL + '/api/reservation', {\n      headers: new Headers({ Authorization: 'Basic ' + window.btoa('asd@asd.com:asdasd') })\n    });\n    observable\n      .subscribe((res) => {\n        let reservation: any = res.json();\n        this.reservations = reservation.data;\n        if (this.reservationObserver.subscription) {\n          this.reservationObserver\n            .subscription\n            .next({\n              type: 'reservation',\n              data: this.reservations\n            });\n        }\n      }, (err) => {\n        console.log(err);\n      });\n    return observable;\n  }\n\n  cancelReservation(reservationID: string, recurring?: boolean) {\n    let observable = this.http.delete(ENV_URL + '/api/reservation/' + reservationID + '?recurring=' + recurring);\n    let subscription = observable\n      .subscribe((res) => {\n        let reservation: any = res.json();\n        this.reservations = reservation.data;\n        if (this.reservationObserver.subscription) {\n          // TODO: Refactor\n          this.reservationObserver\n            .subscription\n            .next({\n              type: 'reservation',\n              data: this.reservations\n            });\n        }\n      }, (err) => {\n        console.log(err);\n      });\n    return subscription;\n  }\n\n  makeReservation(reservation: Object) {\n    this.floorElementsObservable.subscription.next({ type: 'loading' });\n    this.filter = _.extend(this.filter, reservation);\n    console.log(this.filter, reservation);\n\n    let observable: any = this.http.post(ENV_URL + '/api/reservation', JSON.stringify(this.filter), {\n      headers: new Headers({ 'Content-Type': 'application/json' })\n    });\n    let subscription = observable\n      .delay(400)\n      .subscribe((res: any) => {\n        let data = res.json().data;\n        this.floorElementsObservable.subscription.next({\n          type: 'reservation',\n          data: data\n        });\n      });\n    return subscription;\n  }\n\n  transformFilter(filter) {\n    let filterDate = moment(filter.date + ' ' + filter.time, DATE_FORMAT);\n    return {\n      reservationDate: filterDate,\n      reservationEndDate: moment(filterDate).add(filter.duration, 'minutes'),\n      capacity: filter.capacity,\n      features: filter.features,\n      time: filter.time,\n      date: moment(filter.date, DATE_FORMAT)\n    };\n  }\n\n  saveFilter(filter) {\n    if (filter) {\n      this.filter = this.transformFilter(filter);\n      if (filter.time) {\n        this.reservationTime = filter.time + ' - ' +\n          moment(filter.date + ' ' + filter.time, DATE_FORMAT)\n            .add(filter.duration, 'minutes').format('h:mma');\n      }\n    }\n  }\n\n  getReservationFilterObserver() {\n    return this.reservationFilterObserver;\n  }\n\n  getObservable() {\n    return this.reservationObserver;\n  }\n}\n"],"sourceRoot":"/source/"}