{"version":3,"sources":["app/services/CalendarService.ts"],"names":["CalendarService","CalendarService.constructor","CalendarService.addEvent","CalendarService.removeEvent","CalendarService.fetchCalendars","CalendarService.fetchEvents","CalendarService.saveGoogleToken","CalendarService.authorize","CalendarService.loadCalendar"],"mappings":"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","file":"app/services/CalendarService.js","sourcesContent":["import {Injectable} from 'angular2/core';\nimport {Observable} from 'rxjs';\nimport {Http, Response, Headers} from 'angular2/http';\nimport {CLIENT_ID, SCOPES} from '../constants';\n\ndeclare var gapi: any;\n\ninterface ICalendarService {\n  saveGoogleToken(token: String);\n  authorize(callback: Function);\n  loadCalendar();\n  fetchCalendars();\n  fetchEvents();\n  addEvent(event: Object);\n  removeEvent(event: Object);\n}\n\n@Injectable()\nexport class CalendarService implements ICalendarService {\n\n  constructor(private http: Http) {\n  }\n\n  addEvent(event) {\n    console.log('tick');\n  }\n\n  removeEvent(event) {\n    console.log('tick');\n  }\n\n  fetchCalendars() {\n    var request = gapi.client.calendar.events.list({\n      'calendarId': 'primary',\n      'timeMin': (new Date()).toISOString(),\n      'showDeleted': false,\n      'singleEvents': true,\n      'maxResults': 10,\n      'orderBy': 'startTime'\n    });\n\n    request.execute((resp) => {\n      var events = resp.items;\n      if (events.length > 0) {\n        for (let i = 0; i < events.length; i++) {\n          var event = events[i];\n          var when = event.start.dateTime;\n          if (!when) {\n            when = event.start.date;\n          }\n          console.log(event.summary + ' (' + when + ')');\n        }\n      } else {\n        console.log('No upcoming events found.');\n      }\n    });\n  }\n\n  fetchEvents() {\n    this.authorize(() => {\n      var request = gapi.client.calendar.events.list({\n        'calendarId': 'primary',\n        'timeMin': (new Date()).toISOString(),\n        'showDeleted': false,\n        'singleEvents': true,\n        'maxResults': 10,\n        'orderBy': 'startTime'\n      });\n\n      request.execute((resp) => {\n        var events = resp.items;\n        if (events.length > 0) {\n          for (let i = 0; i < events.length; i++) {\n            var event = events[i];\n            var when = event.start.dateTime;\n            if (!when) {\n              when = event.start.date;\n            }\n            console.log(event.summary + ' (' + when + ')');\n          }\n        } else {\n          console.log('No upcoming events found.');\n        }\n      });\n    });\n  }\n\n\n  saveGoogleToken(token) {\n    this.http.patch('/api/company', JSON.stringify({\n      googleToken: token\n    }), {\n      headers: new Headers({ 'Content-Type': 'application/json' })\n    }).subscribe((res) => {\n      console.log(res);\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n  authorize(callback: Function) {\n    if (gapi) {\n      gapi.auth.authorize({\n        client_id: CLIENT_ID,\n        scope: SCOPES,\n        immediate: false\n      }, (res) => {\n        this.saveGoogleToken(res.access_token);\n        this.loadCalendar();\n        callback(res);\n      });\n    }\n  }\n\n  loadCalendar() {\n    gapi.client.load('calendar', 'v3', () => {\n      console.log('tick');\n    });\n  }\n\n}\n"],"sourceRoot":"/source/"}