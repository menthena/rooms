{"version":3,"sources":["app/directives/resizable.ts"],"names":["Resizable","Resizable.constructor","Resizable.edit","Resizable.ngOnInit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;YAOA;gBAUEA,mBAAoBA,UAAsBA,EAAUA,aAA4BA,EAAUA,oBAA0CA;oBAAhHC,eAAUA,GAAVA,UAAUA,CAAYA;oBAAUA,kBAAaA,GAAbA,aAAaA,CAAeA;oBAAUA,yBAAoBA,GAApBA,oBAAoBA,CAAsBA;gBACpIA,CAACA;gBAEDD,wBAAIA,GAAJA,UAAKA,SAASA,EAAEA,IAAIA;oBAClBE,IAAIA,CAACA,oBAAoBA,CAACA,WAAWA,CAACA,SAASA,EAAEA,IAAIA,CAACA,CAACA;gBACzDA,CAACA;gBAEDF,4BAAQA,GAARA;oBAAAG,iBA8CCA;oBA7CCA,IAAIA,UAAUA,GAAGA,IAAIA,CAACA,aAAaA,CAACA,eAAeA,CAACA;oBACpDA,IAAIA,aAAaA,GAAGA,IAAIA,CAACA,UAAUA,CAACA,aAAaA,CAACA;oBAClDA,IAAIA,SAASA,GAAGA,EAAEA,CAACA;oBACnBA,IAAIA,SAASA,GAAGA,GAAGA,CAACA;oBACpBA,IAAIA,QAAQA,GAAGA,EAAEA,CAACA;oBAClBA,IAAIA,QAAQA,GAAGA,GAAGA,CAACA;oBACnBA,IAAIA,OAAOA,GAAGA,YAAYA,CAACA;oBAC3BA,IAAIA,UAAUA,CAACA;oBACfA,EAAEA,CAACA,CAACA,IAAIA,CAACA,IAAIA,IAAIA,IAAIA,CAACA,IAAIA,CAACA,WAAWA,KAAKA,MAAMA,CAACA,CAACA,CAACA;wBAClDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,IAAIA,CAACA,eAAeA,CAACA,CAACA,CAACA;4BAC9BA,QAAQA,GAAGA,CAACA,CAACA;4BACbA,QAAQA,GAAGA,CAACA,CAACA;4BACbA,OAAOA,GAAGA,MAAMA,CAACA;wBACnBA,CAACA;wBAACA,IAAIA,CAACA,CAACA;4BACNA,SAASA,GAAGA,CAACA,CAACA;4BACdA,SAASA,GAAGA,CAACA,CAACA;4BACdA,OAAOA,GAAGA,MAAMA,CAACA;wBACnBA,CAACA;oBACHA,CAACA;oBACDA,EAAEA,CAACA,CAACA,UAAUA,CAACA,CAACA,CAACA;wBACfA,MAAMA,CAACA,aAAaA,CAACA;6BAClBA,SAASA,CAACA;4BACTA,SAASA,EAAEA,SAASA;4BACpBA,QAAQA,EAAEA,QAAQA;4BAClBA,QAAQA,EAAEA,QAAQA;4BAClBA,SAASA,EAAEA,SAASA;4BACpBA,OAAOA,EAAEA,OAAOA;4BAChBA,IAAIA,EAAEA,UAACA,CAACA,EAAEA,OAAOA;gCACfA,IAAIA,SAASA,GAAGA,OAAOA,CAACA,OAAOA,CAACA,IAAIA,CAACA,YAAYA,CAACA,CAACA;gCACnDA,IAAIA,SAASA,GAAGA,KAAIA,CAACA,aAAaA,CAACA,YAAYA,CAACA,CAACA,EAAEA,OAAOA,CAACA,CAACA;gCAC5DA,IAAIA,OAAOA,GAAGA,MAAMA,CAACA,CAACA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;gCAC1CA,EAAEA,CAACA,CAACA,SAASA,CAACA,CAACA,CAACA;oCACdA,KAAIA,CAACA,IAAIA,CAACA,SAASA,EAAEA;wCACnBA,OAAOA,EAAEA,OAAOA;wCAChBA,YAAYA,EAAEA,SAASA,CAACA,KAAKA;wCAC7BA,aAAaA,EAAEA,SAASA,CAACA,MAAMA;qCAChCA,CAACA,CAACA;gCACLA,CAACA;4BACHA,CAACA;yBACFA,CAACA,CAACA;oBACPA,CAACA;oBAACA,IAAIA,CAACA,CAACA;wBACNA,EAAEA,CAACA,CAACA,MAAMA,CAACA,aAAaA,CAACA,CAACA,QAAQA,CAACA,cAAcA,CAACA,CAACA,CAACA,CAACA;4BACnDA,MAAMA,CAACA,aAAaA,CAACA,CAACA,SAASA,CAACA,SAASA,CAACA,CAACA;wBAC7CA,CAACA;oBACHA,CAACA;gBACHA,CAACA;gBAvDDH;oBAACA,YAAKA,EAAEA;;mBAACA,2BAAIA,UAACA;gBARhBA;oBAACA,gBAASA,CAACA;wBACTA,QAAQA,EAAEA,qBAAqBA;wBAC/BA,MAAMA,EAAEA,CAACA,MAAMA,CAACA;qBACjBA,CAACA;oBAEDA,iBAAUA,EAAEA;;8BA2DZA;gBAADA,gBAACA;YAADA,CAhEA,AAgECA,IAAA;YAhED,iCAgEC,CAAA;YAAA,CAAC","file":"app/directives/resizable.js","sourcesContent":["import {Directive, OnInit, ElementRef, Input, Injectable} from 'angular2/core';\nimport {DesignService} from '../services/DesignService';\nimport {IFloorElement, FloorElementsService} from '../services/FloorElementsService';\nimport {Observable} from 'rxjs';\n\ndeclare var jQuery: any;\n\n@Directive({\n  selector: '[resizable-element]',\n  inputs: ['data']\n})\n\n@Injectable()\nexport class Resizable implements OnInit {\n  observable;\n  @Input() data;\n\n  constructor(private elementRef: ElementRef, private DesignService: DesignService, private FloorElementsService: FloorElementsService) {\n  }\n\n  edit(elementID, data) {\n    this.FloorElementsService.editElement(elementID, data);\n  }\n\n  ngOnInit() {\n    let designMode = this.DesignService.designModeState;\n    let nativeElement = this.elementRef.nativeElement;\n    let minHeight = 55;\n    let maxHeight = 300;\n    let minWidth = 50;\n    let maxWidth = 400;\n    let handles = 'n, e, s, w';\n    let intervalID;\n    if (this.data && this.data.elementType === 'line') {\n      if (this.data.elementVertical) {\n        minWidth = 3;\n        maxWidth = 3;\n        handles = 's, n';\n      } else {\n        minHeight = 3;\n        maxHeight = 3;\n        handles = 'e, w';\n      }\n    }\n    if (designMode) {\n      jQuery(nativeElement)\n        .resizable({\n          minHeight: minHeight,\n          minWidth: minWidth,\n          maxWidth: maxWidth,\n          maxHeight: maxHeight,\n          handles: handles,\n          stop: (e, dropped) => {\n            let elementID = dropped.element.attr('element-id');\n            let dimension = this.DesignService.getDimension(e, dropped);\n            let floorID = jQuery(e.target).data('id');\n            if (elementID) {\n              this.edit(elementID, {\n                floorID: floorID,\n                elementWidth: dimension.width,\n                elementHeight: dimension.height\n              });\n            }\n          }\n        });\n    } else {\n      if (jQuery(nativeElement).hasClass('ui-resizable')) {\n        jQuery(nativeElement).resizable('destroy');\n      }\n    }\n  }\n};\n"],"sourceRoot":"/source/"}