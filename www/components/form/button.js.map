{"version":3,"sources":["app/components/form/button.ts"],"names":["Button","Button.constructor","Button.getValues","Button.updateModel","Button.ngOnInit"],"mappings":";;;;;;;;;;;;;;;;;;YAIA;gBAYEA,gBAAoBA,UAAsBA;oBAAtBC,eAAUA,GAAVA,UAAUA,CAAYA;gBAAGA,CAACA;gBAE9CD,0BAASA,GAATA;oBACEE,IAAIA,MAAMA,GAAGA,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA,KAAKA,CAACA,IAAIA,CAACA,WAAWA,CAACA,CAACA,CAACA,KAAKA,CAACA,GAAGA,CAACA,CAACA;oBACvEA,EAAEA,CAACA,CAACA,MAAMA,CAACA,MAAMA,IAAIA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA,CAACA,KAAKA,EAAEA,IAAIA,MAAMA,CAACA,CAACA,CAACA,KAAKA,MAAMA,CAACA,CAACA,CAACA,CAACA;wBACrEA,MAAMA,GAAGA,EAAEA,CAACA;oBACdA,CAACA;oBACDA,MAAMA,CAACA,MAAMA,CAACA;gBAChBA,CAACA;gBAEDF,4BAAWA,GAAXA,UAAYA,MAAMA,EAAEA,KAAKA;oBACvBG,MAAMA,CAACA,GAAGA,GAAGA,IAAIA,CAACA,WAAWA,CAACA,CAACA,IAAIA,CAACA,SAASA,EAAEA,KAAKA,CAACA,CAACA;oBACtDA,IAAIA,CAACA,SAASA,CAACA,KAAKA,CAACA,IAAIA,CAACA,WAAWA,CAACA,GAAGA,MAAMA,CAACA;oBAChDA,IAAIA,CAACA,SAASA,CAACA,YAAYA,CAACA,IAAIA,CAACA,IAAIA,CAACA,SAASA,CAACA,KAAKA,CAACA,CAACA;gBACzDA,CAACA;gBAEDH,yBAAQA,GAARA;oBAAAI,iBA4BCA;oBA3BCA,IAAIA,aAAaA,GAAGA,MAAMA,CAACA,IAAIA,CAACA,UAAUA,CAACA,aAAaA,CAACA,CAACA;oBAC1DA,aAAaA,CAACA,MAAMA,CAACA;wBACnBA,IAAIA,EAAEA,KAAKA;qBACZA,CAACA,CAACA;oBAEHA,IAAIA,MAAMA,GAAGA,IAAIA,CAACA,SAASA,EAAEA,CAACA;oBAC9BA,IAAIA,KAAKA,GAAGA,aAAaA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;oBACrCA,IAAIA,KAAKA,GAAGA,MAAMA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA;oBAClCA,EAAEA,CAACA,CAACA,KAAKA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;wBACfA,IAAIA,CAACA,WAAWA,CAACA,MAAMA,EAAEA,KAAKA,CAACA,CAACA;oBAClCA,CAACA;oBAEDA,aAAaA,CAACA,MAAMA,CAACA,UAACA,CAACA;wBACrBA,IAAIA,MAAMA,GAAGA,KAAIA,CAACA,SAASA,EAAEA,CAACA;wBAE9BA,IAAIA,SAASA,GAAGA,MAAMA,CAACA,CAACA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA;wBACjDA,IAAIA,KAAKA,GAAGA,MAAMA,CAACA,CAACA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;wBACxCA,IAAIA,KAAKA,GAAGA,MAAMA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA;wBAClCA,EAAEA,CAACA,CAACA,SAASA,CAACA,CAACA,CAACA;4BACdA,EAAEA,CAACA,CAACA,KAAKA,KAAKA,CAACA,CAACA,CAACA,CAACA,CAACA;gCACjBA,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA;4BACrBA,CAACA;wBACHA,CAACA;wBAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,KAAKA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;4BACtBA,MAAMA,CAACA,MAAMA,CAACA,KAAKA,EAAEA,CAACA,CAACA,CAACA;wBAC1BA,CAACA;wBACDA,KAAIA,CAACA,WAAWA,CAACA,MAAMA,EAAEA,KAAKA,CAACA,CAACA;oBAClCA,CAACA,CAACA,CAACA;gBACLA,CAACA;gBA9CDJ;oBAACA,YAAKA,EAAEA;;mBAACA,+BAAWA,UAASA;gBAC7BA;oBAACA,YAAKA,EAAEA;;mBAACA,6BAASA,UAAMA;gBAX1BA;oBAACA,gBAASA,CAACA;wBACTA,QAAQA,EAAEA,UAAUA;wBACpBA,MAAMA,EAAEA,CAACA,WAAWA,CAACA;wBACrBA,UAAUA,EAAEA,CAACA,aAAaA,CAACA;wBAC3BA,SAASA,EAAEA,CAACA,wBAAwBA,CAACA;wBACrCA,aAAaA,EAAEA,wBAAiBA,CAACA,IAAIA;wBACrCA,QAAQA,EAAEA,2BAA2BA;qBACtCA,CAACA;;2BAkDDA;gBAADA,aAACA;YAADA,CAzDA,AAyDCA,IAAA;YAzDD,2BAyDC,CAAA;YAAA,CAAC","file":"app/components/form/button.js","sourcesContent":["import {Component, OnInit, Input, ElementRef, ViewEncapsulation} from 'angular2/core';\n\ndeclare var jQuery:any;\n\n@Component({\n  selector: '[button]',\n  inputs: ['formModel'],\n  properties: ['controlName'],\n  styleUrls: ['styles/form/button.css'],\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-content></ng-content>`\n})\n\nexport class Button implements OnInit {\n  @Input() controlName: string;\n  @Input() formModel: any;\n  constructor(private elementRef: ElementRef) {}\n\n  getValues() {\n    let values = String(this.formModel.value[this.controlName]).split(',');\n    if (values.length <= 1 && (values[0] === '' || values[0] === 'null')) {\n      values = [];\n    }\n    return values;\n  }\n\n  updateModel(values, value) {\n    jQuery('#' + this.controlName).prop('checked', value);\n    this.formModel.value[this.controlName] = values;\n    this.formModel.valueChanges.next(this.formModel.value);\n  }\n\n  ngOnInit() {\n    let buttonElement = jQuery(this.elementRef.nativeElement);\n    buttonElement.button({\n      text: false\n    });\n\n    let values = this.getValues();\n    let value = buttonElement.prop('id');\n    let index = values.indexOf(value);\n    if (index > -1) {\n      this.updateModel(values, value);\n    }\n\n    buttonElement.change((e) => {\n      let values = this.getValues();\n\n      let isChecked = jQuery(e.target).prop('checked');\n      let value = jQuery(e.target).prop('id');\n      let index = values.indexOf(value);\n      if (isChecked) {\n        if (index === -1) {\n          values.push(value);\n        }\n      } else if (index > -1) {\n        values.splice(index, 1);\n      }\n      this.updateModel(values, value);\n    });\n  }\n};\n"],"sourceRoot":"/source/"}