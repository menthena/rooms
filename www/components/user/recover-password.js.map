{"version":3,"sources":["app/components/user/recover-password.ts"],"names":["RecoverPassword","RecoverPassword.constructor","RecoverPassword.submitRecoverPassword"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAQA;gBA+DEA,yBAAoBA,EAAeA,EAAUA,MAAcA,EAAUA,WAAwBA,EACnFA,cAA8BA;oBADpBC,OAAEA,GAAFA,EAAEA,CAAaA;oBAAUA,WAAMA,GAANA,MAAMA,CAAQA;oBAAUA,gBAAWA,GAAXA,WAAWA,CAAaA;oBACnFA,mBAAcA,GAAdA,cAAcA,CAAgBA;oBACtCA,IAAIA,CAACA,mBAAmBA,GAAGA,IAAIA,CAACA,EAAEA,CAACA,KAAKA,CAACA;wBACvCA,KAAKA,EAAEA,CAACA,EAAEA,EAAEA,IAAIA,CAACA,cAAcA,CAACA,cAAcA,CAACA;qBAChDA,CAACA,CAACA;gBACLA,CAACA;gBAEDD,+CAAqBA,GAArBA;oBAAAE,iBAkBCA;oBAjBCA,IAAIA,KAAKA,GAAGA,IAAIA,CAACA,mBAAmBA,CAACA,KAAKA,CAACA;oBAC3CA,IAAIA,CAACA,SAASA,GAAGA,IAAIA,CAACA;oBACtBA,EAAEA,CAACA,CAACA,IAAIA,CAACA,mBAAmBA,CAACA,KAAKA,CAACA,CAACA,CAACA;wBACnCA,IAAIA,CAACA,UAAUA,GAAGA,IAAIA,CAACA;wBACvBA,IAAIA,CAACA,kBAAkBA,GAAGA,KAAKA,CAACA;wBAChCA,IAAIA,CAACA,WAAWA,CAACA,eAAeA,CAACA,KAAKA,CAACA,KAAKA,CAACA;6BAC1CA,SAASA,CAACA,UAACA,GAAGA;4BACbA,UAAUA,CAACA;gCACTA,KAAIA,CAACA,UAAUA,GAAGA,KAAKA,CAACA;gCACxBA,KAAIA,CAACA,OAAOA,GAAGA,IAAIA,CAACA;4BACtBA,CAACA,EAAEA,GAAGA,CAACA,CAACA;wBACVA,CAACA,EAAEA,UAACA,GAAGA;4BACLA,UAAUA,CAACA;gCACTA,KAAIA,CAACA,UAAUA,GAAGA,KAAKA,CAACA;4BAC1BA,CAACA,EAAEA,GAAGA,CAACA,CAACA;wBACVA,CAACA,CAACA,CAACA;oBACPA,CAACA;gBACHA,CAACA;gBAxFHF;oBAACA,gBAASA,CAACA;wBACTA,QAAQA,EAAEA,OAAOA;wBACjBA,UAAUA,EAAEA,CAACA,eAAMA,EAAEA,oCAAgBA,EAAEA,mBAAUA,CAACA;wBAClDA,SAASA,EAAEA,CAACA,gCAAgCA,CAACA;wBAC7CA,QAAQA,EAAEA,4qEAiDTA;qBACFA,CAACA;;oCAoCDA;gBAADA,sBAACA;YAADA,CA1FA,AA0FCA,IAAA;YA1FD,6CA0FC,CAAA","file":"app/components/user/recover-password.js","sourcesContent":["import {Component} from 'angular2/core';\nimport {FormBuilder, NgForm, Validators, Control} from 'angular2/common';\nimport {Router, RouterLink} from 'angular2/router';\nimport {EMAIL_REGEX} from '../../constants';\nimport {LoadingIndicator} from '../../directives/loading-indicator';\nimport {UserService} from '../../services/UserService';\nimport {UserValidators} from '../../validators/UserValidators';\n\n@Component({\n  selector: 'login',\n  directives: [NgForm, LoadingIndicator, RouterLink],\n  styleUrls: ['styles/common/generic-form.css'],\n  template: `\n  <div class=\"generic-form\">\n    <form [ngFormModel]=\"recoverPasswordForm\" (ngSubmit)=\"submitRecoverPassword($event)\" novalidate>\n      <fieldset>\n        <legend>Recover password</legend>\n        <div class=\"white-bg\">\n          <div *ngIf=\"success\" class=\"success row\">\n            <div class=\"col-xs-1\">\n              <i class=\"fa fa-check\"></i>\n            </div>\n            <div class=\"col-xs-10 success-message\">\n              We have sent an email with instructions to recover your password.\n            </div>\n          </div>\n          <div *ngIf=\"!success\">\n            <div class=\"message\">\n              Please enter the email address you have used to register.\n              We will send an email with instructions.\n            </div>\n            <div class=\"server-err\" [class.active]=\"invalidCredentials\">\n              <i class=\"fa fa-exclamation-circle\"></i> Invalid email or password\n            </div>\n            <div class=\"input-group\">\n              <label for=\"email\">\n                Email\n              </label>\n              <input type=\"email\" placeholder=\"Please enter your email\" name=\"email\" id=\"email\"\n                ngControl=\"email\">\n              <div [class.active]=\"(submitted || recoverPasswordForm.controls.email.touched)\n                && !recoverPasswordForm.controls.email.valid\" class=\"err\">\n                <div *ngIf=\"recoverPasswordForm.controls.email.errors && recoverPasswordForm.controls.email.errors.required\">\n                  <i class=\"fa fa-exclamation-circle\"></i> Please enter your email\n                </div>\n                <div *ngIf=\"recoverPasswordForm.controls.email.errors && recoverPasswordForm.controls.email.errors.invalid\">\n                  <i class=\"fa fa-exclamation-circle\"></i> Please enter a valid email\n                </div>\n              </div>\n\n            </div>\n            <div class=\"buttons\">\n              <button class=\"btn\" [class.submitting]=\"submitting\">\n                <span>Recover password</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n  `\n})\n\nexport class RecoverPassword {\n  recoverPasswordForm;\n  submitted: boolean;\n  invalidCredentials: boolean;\n  submitting: boolean;\n  success: boolean;\n\n  constructor(private fb: FormBuilder, private router: Router, private UserService: UserService,\n    private UserValidators: UserValidators) {\n    this.recoverPasswordForm = this.fb.group({\n      email: ['', this.UserValidators.EmailValidator]\n    });\n  }\n\n  submitRecoverPassword() {\n    let login = this.recoverPasswordForm.value;\n    this.submitted = true;\n    if (this.recoverPasswordForm.valid) {\n      this.submitting = true;\n      this.invalidCredentials = false;\n      this.UserService.recoverPassword(login.email)\n        .subscribe((res) => {\n          setTimeout(() => {\n            this.submitting = false;\n            this.success = true;\n          }, 250);\n        }, (err) => {\n          setTimeout(() => {\n            this.submitting = false;\n          }, 250);\n        });\n    }\n  }\n\n}\n"],"sourceRoot":"/source/"}