{"version":3,"sources":["app/components/user/register.ts"],"names":["Register","Register.constructor","Register.submitLoginForm"],"mappings":"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","file":"app/components/user/register.js","sourcesContent":["import {Component} from 'angular2/core';\nimport {FormBuilder, NgForm, Validators, Control} from 'angular2/common';\nimport {Router, RouterLink} from 'angular2/router';\nimport {EMAIL_REGEX} from '../../constants';\nimport {LoadingIndicator} from '../../directives/loading-indicator';\nimport {UserService} from '../../services/UserService';\nimport {AppService} from '../../services/AppService';\nimport {UserValidators} from '../../validators/UserValidators';\n\n@Component({\n  selector: 'register',\n  directives: [NgForm, LoadingIndicator, RouterLink],\n  styleUrls: ['styles/common/generic-form.css'],\n  template: `\n  <div class=\"generic-form\" [ngClass]=\"{'animated slideInRight': isIonic}\">\n    <form [ngFormModel]=\"registerForm\" (ngSubmit)=\"submitLoginForm($event)\" novalidate>\n      <fieldset>\n        <legend>Register</legend>\n        <div class=\"white-bg\">\n          <div class=\"server-err\" [class.active]=\"error\">\n            <i class=\"fa fa-exclamation-circle\"></i> {{ error }}\n          </div>\n\n          <div class=\"input-group\">\n            <label for=\"name\">\n              Name\n            </label>\n            <input type=\"name\" placeholder=\"Please enter your name\" name=\"name\" id=\"name\"\n              ngControl=\"name\">\n            <div [class.active]=\"(submitted || registerForm.controls.name.touched) && !registerForm.controls.name.valid\" class=\"err\">\n              <div *ngIf=\"registerForm.controls.name.errors && registerForm.controls.name.errors.required\">\n                <i class=\"fa fa-exclamation-circle\"></i> Please enter your name\n              </div>\n            </div>\n          </div>\n\n          <div class=\"input-group\">\n            <label for=\"companyName\">\n              Company name\n            </label>\n            <input type=\"companyName\" placeholder=\"Please enter the company name\" name=\"companyName\" id=\"companyName\"\n              ngControl=\"companyName\">\n            <div [class.active]=\"(submitted || registerForm.controls.companyName.touched) &&\n                !registerForm.controls.companyName.valid\" class=\"err\">\n              <div *ngIf=\"registerForm.controls.companyName.errors && registerForm.controls.companyName.errors.required\">\n                <i class=\"fa fa-exclamation-circle\"></i> Please enter the company name\n              </div>\n            </div>\n          </div>\n\n          <div class=\"input-group\">\n            <label for=\"email\">\n              Email\n            </label>\n            <input type=\"email\" placeholder=\"Please enter your email\" name=\"email\" id=\"email\"\n              ngControl=\"email\">\n            <div [class.active]=\"(submitted || registerForm.controls.email.touched) && !registerForm.controls.email.valid\" class=\"err\">\n              <div *ngIf=\"registerForm.controls.email.errors && registerForm.controls.email.errors.required\">\n                <i class=\"fa fa-exclamation-circle\"></i> Please enter your email\n              </div>\n              <div *ngIf=\"registerForm.controls.email.errors && registerForm.controls.email.errors.invalid\">\n                <i class=\"fa fa-exclamation-circle\"></i> Please enter a valid email\n              </div>\n            </div>\n          </div>\n\n          <div class=\"input-group\">\n            <label for=\"reemail\">\n              Re-enter email\n            </label>\n            <input type=\"reemail\" placeholder=\"Please re enter your reemail\" name=\"reemail\" id=\"reemail\"\n              ngControl=\"reemail\">\n            <div [class.active]=\"(submitted || registerForm.controls.reemail.touched) && !registerForm.controls.reemail.valid\" class=\"err\">\n              <div *ngIf=\"registerForm.controls.reemail.errors && registerForm.controls.reemail.errors.required\">\n                <i class=\"fa fa-exclamation-circle\"></i> Please re-enter your email\n              </div>\n              <div *ngIf=\"registerForm.controls.reemail.errors && registerForm.controls.reemail.errors.notMatch\">\n                <i class=\"fa fa-exclamation-circle\"></i> Your passwords don't match\n              </div>\n            </div>\n          </div>\n\n          <div class=\"input-group\">\n            <label for=\"password\">\n              Password\n            </label>\n            <input type=\"password\" placeholder=\"Please enter you password\" name=\"password\"\n              id=\"password\" ngControl=\"password\">\n              <div [class.active]=\"(submitted || registerForm.controls.password.touched)\n                && !registerForm.controls.password.valid\" class=\"err\">\n                <div *ngIf=\"registerForm.controls.password.errors && registerForm.controls.password.errors.required\">\n                  <i class=\"fa fa-exclamation-circle\"></i> Please enter your password\n                </div>\n                <div *ngIf=\"registerForm.controls.password.errors && registerForm.controls.password.errors.minimum\">\n                  <i class=\"fa fa-exclamation-circle\"></i> Your password must have at least 6 characters\n                </div>\n              </div>\n\n            <div class=\"tip\">\n              <i class=\"fa fa-info-circle\"></i>\n              Password must have at least 6 characters\n            </div>\n          </div>\n          <div class=\"buttons\">\n            <button class=\"btn\" [class.submitting]=\"submitting\">\n              <span>Register</span>\n            </button>\n          </div>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n  `\n})\n\nexport class Register {\n  registerForm;\n  submitted: boolean;\n  success: boolean;\n  isIonic: boolean;\n  submitting: boolean;\n  error: string;\n\n  constructor(private fb: FormBuilder, private router: Router, private UserService: UserService,\n    private UserValidators: UserValidators, private AppService: AppService) {\n    this.isIonic = this.AppService.isIonic;\n    this.registerForm = this.fb.group({\n      name: ['', Validators.required],\n      companyName: ['', Validators.required],\n      email: ['', this.UserValidators.EmailValidator],\n      reemail: ['', (control: any) : Object => {\n        if (!control.value) {\n          return {\n            required: true\n          };\n        } else if (control.value !== this.registerForm.value.email) {\n          return {\n            notMatch: true\n          };\n        }\n      }],\n      password: ['', this.UserValidators.PasswordValidator]\n    });\n  }\n\n  submitLoginForm() {\n    let register = this.registerForm.value;\n    this.submitted = true;\n    if (this.registerForm.valid) {\n      this.submitting = true;\n      this.UserService.register({\n        companyName: register.companyName,\n        name: register.name,\n        email: register.email,\n        password: register.password\n      }).subscribe((res) => {\n          setTimeout(() => {\n            this.submitting = false;\n            this.router.navigate(['RegisterSuccess']);\n          }, 250);\n        }, (err) => {\n          this.submitting = false;\n          if (err.status === 409) {\n            this.error = 'There is a user with the same email address.';\n          } else {\n            this.error = 'Server error occured';\n          }\n        });\n    }\n  }\n\n}\n"],"sourceRoot":"/source/"}