{"version":3,"sources":["app/components/user/login.ts"],"names":["Login","Login.constructor","Login.submitLoginForm"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAQA;gBA+DEA,eAAoBA,EAAeA,EAAUA,MAAcA,EAAUA,WAAwBA,EACnFA,cAA8BA;oBADpBC,OAAEA,GAAFA,EAAEA,CAAaA;oBAAUA,WAAMA,GAANA,MAAMA,CAAQA;oBAAUA,gBAAWA,GAAXA,WAAWA,CAAaA;oBACnFA,mBAAcA,GAAdA,cAAcA,CAAgBA;oBACtCA,IAAIA,CAACA,SAASA,GAAGA,IAAIA,CAACA,EAAEA,CAACA,KAAKA,CAACA;wBAC7BA,KAAKA,EAAEA,CAACA,EAAEA,EAAEA,IAAIA,CAACA,cAAcA,CAACA,cAAcA,CAACA;wBAC/CA,QAAQA,EAAEA,CAACA,EAAEA,EAAEA,mBAAUA,CAACA,QAAQA,CAACA;qBACpCA,CAACA,CAACA;gBACLA,CAACA;gBAEDD,+BAAeA,GAAfA;oBAAAE,iBAoBCA;oBAnBCA,IAAIA,KAAKA,GAAGA,IAAIA,CAACA,SAASA,CAACA,KAAKA,CAACA;oBACjCA,IAAIA,CAACA,SAASA,GAAGA,IAAIA,CAACA;oBACtBA,EAAEA,CAACA,CAACA,IAAIA,CAACA,SAASA,CAACA,KAAKA,CAACA,CAACA,CAACA;wBACzBA,IAAIA,CAACA,UAAUA,GAAGA,IAAIA,CAACA;wBACvBA,IAAIA,CAACA,kBAAkBA,GAAGA,KAAKA,CAACA;wBAEhCA,IAAIA,CAACA,WAAWA,CAACA,KAAKA,CAACA,KAAKA,CAACA,KAAKA,EAAEA,KAAKA,CAACA,QAAQA,CAACA;6BAChDA,GAAGA,CAACA,UAACA,GAAGA;4BACPA,UAAUA,CAACA;gCACTA,KAAIA,CAACA,UAAUA,GAAGA,KAAKA,CAACA;gCACxBA,OAAOA,CAACA,GAAGA,CAACA,MAAMA,EAAEA,KAAIA,CAACA,WAAWA,CAACA,CAACA;gCACtCA,EAAEA,CAACA,CAACA,CAACA,KAAIA,CAACA,WAAWA,CAACA,QAAQA,CAACA,CAACA,CAACA;oCAC/BA,KAAIA,CAACA,kBAAkBA,GAAGA,IAAIA,CAACA;gCACjCA,CAACA;gCAACA,IAAIA,CAACA,CAACA;oCACNA,KAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,CAACA,SAASA,CAACA,CAACA,CAACA;gCACpCA,CAACA;4BACHA,CAACA,EAAEA,GAAGA,CAACA,CAACA;wBACVA,CAACA,CAACA,CAACA;oBACPA,CAACA;gBACHA,CAACA;gBA3FHF;oBAACA,gBAASA,CAACA;wBACTA,QAAQA,EAAEA,OAAOA;wBACjBA,UAAUA,EAAEA,CAACA,eAAMA,EAAEA,oCAAgBA,EAAEA,mBAAUA,CAACA;wBAClDA,SAASA,EAAEA,CAACA,gCAAgCA,CAACA;wBAC7CA,QAAQA,EAAEA,ozEAkDTA;qBACFA,CAACA;;0BAsCDA;gBAADA,YAACA;YAADA,CA7FA,AA6FCA,IAAA;YA7FD,yBA6FC,CAAA","file":"app/components/user/login.js","sourcesContent":["import {Component, Output, EventEmitter} from 'angular2/core';\nimport {FormBuilder, NgForm, Validators, Control} from 'angular2/common';\nimport {Router, RouterLink} from 'angular2/router';\nimport {EMAIL_REGEX} from '../../constants';\nimport {LoadingIndicator} from '../../directives/loading-indicator';\nimport {UserValidators} from '../../validators/UserValidators';\nimport {UserService} from '../../services/UserService';\n\n@Component({\n  selector: 'login',\n  directives: [NgForm, LoadingIndicator, RouterLink],\n  styleUrls: ['styles/common/generic-form.css'],\n  template: `\n  <div class=\"generic-form animated slideInRight\">\n    <form [ngFormModel]=\"loginForm\" (ngSubmit)=\"submitLoginForm($event)\" novalidate>\n      <fieldset>\n        <legend>Login</legend>\n        <div class=\"white-bg\">\n          <div class=\"server-err\" [class.active]=\"invalidCredentials\">\n            <i class=\"fa fa-exclamation-circle\"></i> Invalid email or password\n          </div>\n          <div class=\"input-group\">\n            <label for=\"email\">\n              Email\n            </label>\n            <input type=\"email\" placeholder=\"Please enter your email\" name=\"email\" id=\"email\"\n              ngControl=\"email\">\n            <div [class.active]=\"(submitted || loginForm.controls.email.touched) && !loginForm.controls.email.valid\" class=\"err\">\n              <div *ngIf=\"loginForm.controls.email.errors && loginForm.controls.email.errors.required\">\n                <i class=\"fa fa-exclamation-circle\"></i> Please enter your email\n              </div>\n              <div *ngIf=\"loginForm.controls.email.errors && loginForm.controls.email.errors.invalid\">\n                <i class=\"fa fa-exclamation-circle\"></i> Please enter a valid email\n              </div>\n            </div>\n\n          </div>\n          <div class=\"input-group\">\n            <label for=\"password\">\n              Password\n            </label>\n            <input type=\"password\" placeholder=\"Please enter your password\" name=\"password\"\n              id=\"password\" ngControl=\"password\">\n            <div [class.active]=\"(submitted || loginForm.controls.password.touched) && !loginForm.controls.password.valid\" class=\"err\">\n                <i class=\"fa fa-exclamation-circle\"></i> Please enter your password\n            </div>\n          </div>\n          <div class=\"buttons\">\n            <button class=\"btn\" [class.submitting]=\"submitting\">\n              <span>Log in</span>\n            </button>\n          </div>\n          <div class=\"sub-form\">\n            You forgot your password? It is okay, we all have been there. <a [routerLink]=\"['/RecoverPassword']\">Recover password</a>.\n            <div>\n              OR you can <a [routerLink]=\"['/Register']\">register</a>.\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n  `\n})\n\nexport class Login {\n  loginForm;\n  submitted: boolean;\n  invalidCredentials: boolean;\n  submitting: boolean;\n\n  constructor(private fb: FormBuilder, private router: Router, private UserService: UserService,\n    private UserValidators: UserValidators) {\n    this.loginForm = this.fb.group({\n      email: ['', this.UserValidators.EmailValidator],\n      password: ['', Validators.required]\n    });\n  }\n\n  submitLoginForm() {\n    let login = this.loginForm.value;\n    this.submitted = true;\n    if (this.loginForm.valid) {\n      this.submitting = true;\n      this.invalidCredentials = false;\n\n      this.UserService.login(login.email, login.password)\n        .add((res) => {\n          setTimeout(() => {\n            this.submitting = false;\n            console.log('tick', this.UserService);\n            if (!this.UserService.isLogged) {\n              this.invalidCredentials = true;\n            } else {\n              this.router.navigate(['Reserve']);\n            }\n          }, 250);\n        });\n    }\n  }\n\n}\n"],"sourceRoot":"/source/"}