{"version":3,"sources":["app/components/floors/placeholder.ts"],"names":["Placeholder","Placeholder.constructor","Placeholder.destroy","Placeholder.editElement"],"mappings":";;;;;;;;;AAAA,qBAAmD,eAAe,CAAC,CAAA;AAEnE,0BAAwB,4BAA4B,CAAC,CAAA;AACrD,8BAA4B,8BAA8B,CAAC,CAAA;AAC3D,qCAAmC,qCAAqC,CAAC,CAAA;AACzE,6BAA0B,wBAAwB,CAAC,CAAA;AACnD,0BAAwB,4BAA4B,CAAC,CAAA;AAIrD;IAyBEA,qBAAYA,aAA4BA,EAAUA,oBAA0CA;QAA1CC,yBAAoBA,GAApBA,oBAAoBA,CAAsBA;QAC1FA,IAAIA,CAACA,UAAUA,GAAGA,aAAaA,CAACA,eAAeA,CAACA;QAChDA,IAAIA,CAACA,gBAAgBA,GAAGA,aAAaA,CAACA,aAAaA,EAAEA,CAACA;IACxDA,CAACA;IAEDD,6BAAOA,GAAPA;QACEE,IAAIA,CAACA,oBAAoBA;aACtBA,aAAaA,CAACA,IAAIA,CAACA,IAAIA,CAACA,OAAOA,EAAEA,IAAIA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA;IAC3DA,CAACA;IAEDF,iCAAWA,GAAXA;QACEG,IAAIA,CAACA,gBAAgBA;aAClBA,YAAYA;aACZA,IAAIA,CAACA;YACJA,IAAIA,EAAEA,MAAMA;YACZA,IAAIA,EAAEA,IAAIA,CAACA,IAAIA,CAACA,SAASA;SAC1BA,CAACA,CAACA;IACPA,CAACA;IArBDH;QAACA,YAAKA,EAAEA;;OAACA,6BAAIA,UAACA;IArBhBA;QAACA,gBAASA,CAACA;YACTA,QAAQA,EAAEA,aAAaA;YACvBA,UAAUA,EAAEA,CAAEA,qBAASA,EAAEA,qBAASA,EAAEA,0BAAWA,CAACA;YAChDA,MAAMA,EAAEA,CAACA,MAAMA,CAACA;YAChBA,SAASA,EAAEA,CAACA,+BAA+BA,EAAEA,4BAA4BA,CAACA;YAC1EA,QAAQA,EAAEA,6mBAYTA;SACFA,CAACA;;oBAyBDA;IAADA,kBAACA;;AAADA,CA3CA,AA2CCA,IAAA;AAvBY,mBAAW,cAuBvB,CAAA","file":"app/components/floors/placeholder.js","sourcesContent":["import {Component, Input, OnInit, ElementRef} from 'angular2/core';\nimport {Observable} from 'rxjs';\nimport {Resizable} from '../../directives/resizable';\nimport {DesignService} from '../../services/DesignService';\nimport {FloorElementsService} from '../../services/FloorElementsService';\nimport {EditElement} from '../design/edit-element';\nimport {Draggable} from '../../directives/draggable';\n\ndeclare var jQuery:any;\n\n@Component({\n  selector: 'placeholder',\n  directives: [ Resizable, Draggable, EditElement],\n  inputs: ['data'],\n  styleUrls: ['styles/floors/placeholder.css', 'styles/common/controls.css'],\n  template: `\n    <div class=\"wrapper control\" resizable-element draggable-element\n      [containment]=\"'#floor' + data.floorID\" [attr.element-id]=\"data.elementID\" [attr.data-id]=\"data.floorID\">\n      <edit-element *ngIf=\"designMode\" place-element place-type=\"modal\" [data]=\"data\"></edit-element>\n      <div class=\"placeholder\">\n        <div><span>{{ data.elementName }}</span></div>\n        <div *ngIf=\"designMode\" >\n          <a (click)=\"editElement()\"><i class=\"fa fa-pencil\"></i></a>\n          <a (click)=\"destroy()\"><i class=\"fa fa-trash\"></i></a>\n        </div>\n      </div>\n    </div>\n  `\n})\n\nexport class Placeholder {\n  @Input() data;\n  designObservable;\n  designMode;\n\n  constructor(DesignService: DesignService, private FloorElementsService: FloorElementsService) {\n    this.designMode = DesignService.designModeState;\n    this.designObservable = DesignService.getObservable();\n  }\n\n  destroy() {\n    this.FloorElementsService\n      .deleteElement(this.data.floorID, this.data.elementID);\n  }\n\n  editElement() {\n    this.designObservable\n      .subscription\n      .next({\n        type: 'edit',\n        data: this.data.elementID\n      });\n  }\n}\n"],"sourceRoot":"/source/"}