{"version":3,"sources":["app/components/common/overlay.ts"],"names":["Overlay","Overlay.constructor","Overlay.ngOnInit"],"mappings":";;;;;;;;;;;;;;;;;;;;;YAMA;gBAeEA,iBAAoBA,kBAAsCA;oBAAtCC,uBAAkBA,GAAlBA,kBAAkBA,CAAoBA;oBACxDA,IAAIA,CAACA,qBAAqBA,GAAGA,IAAIA,CAACA,kBAAkBA,CAACA,aAAaA,EAAEA,CAACA;gBACvEA,CAACA;gBAEDD,0BAAQA,GAARA;oBAAAE,iBAiBCA;oBAhBCA,IAAIA,CAACA,qBAAqBA;yBACvBA,OAAOA,EAAEA,CAACA;oBACbA,IAAIA,CAACA,qBAAqBA;yBACvBA,SAASA,CAACA,UAAAA,GAAGA;wBACZA,EAAEA,CAACA,CAACA,OAAOA,GAAGA,KAAKA,QAAQA,CAACA,CAACA,CAACA;4BAC5BA,KAAIA,CAACA,aAAaA,GAAGA,IAAIA,CAACA;4BAC1BA,UAAUA,CAACA;gCACTA,KAAIA,CAACA,QAAQA,GAAGA,IAAIA,CAACA;4BACvBA,CAACA,EAAEA,GAAGA,CAACA,CAACA;wBACVA,CAACA;wBAACA,IAAIA,CAACA,CAACA;4BACNA,KAAIA,CAACA,QAAQA,GAAGA,KAAKA,CAACA;4BACtBA,UAAUA,CAACA;gCACTA,KAAIA,CAACA,aAAaA,GAAGA,KAAKA,CAACA;4BAC7BA,CAACA,EAAEA,GAAGA,CAACA,CAACA;wBACVA,CAACA;oBACHA,CAACA,CAACA,CAACA;gBACPA,CAACA;gBApCHF;oBAACA,gBAASA,CAACA;wBACTA,QAAQA,EAAEA,SAASA;wBACnBA,SAASA,EAAEA,EAAEA;wBACbA,QAAQA,EAAEA,kGAGTA;wBACDA,SAASA,EAAEA,CAACA,2BAA2BA,CAACA;qBACzCA,CAACA;;4BA6BDA;gBAADA,cAACA;YAADA,CArCA,AAqCCA,IAAA;YArCD,6BAqCC,CAAA","file":"app/components/common/overlay.js","sourcesContent":["import {Component} from 'angular2/core';\nimport {RouterLink} from 'angular2/router';\nimport {DesignService} from '../../services/DesignService';\nimport {ReservationService} from '../../services/ReservationService';\nimport {FloorElementsService} from '../../services/FloorElementsService';\n\n@Component({\n  selector: 'overlay',\n  providers: [],\n  template: `\n    <div class=\"overlay\" *ngIf=\"isPanelActive\" [class.active]=\"isActive\">\n    <div>\n  `,\n  styleUrls: ['styles/common/overlay.css']\n})\n\nexport class Overlay {\n  isActive: boolean;\n  isPanelActive: boolean;\n  reservationObservable: any;\n\n  constructor(private ReservationService: ReservationService) {\n    this.reservationObservable = this.ReservationService.getObservable();\n  }\n\n  ngOnInit() {\n    this.reservationObservable\n      .connect();\n    this.reservationObservable\n      .subscribe(res => {\n        if (typeof res === 'string') {\n          this.isPanelActive = true;\n          setTimeout(() => {\n            this.isActive = true;\n          }, 100);\n        } else {\n          this.isActive = false;\n          setTimeout(() => {\n            this.isPanelActive = false;\n          }, 100);\n        }\n      });\n  }\n}\n"],"sourceRoot":"/source/"}