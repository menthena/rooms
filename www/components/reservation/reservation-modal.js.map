{"version":3,"sources":["app/components/reservation/reservation-modal.ts"],"names":["ReservationModal","ReservationModal.constructor","ReservationModal.dismissBooking","ReservationModal.submitReservationForm","ReservationModal.ngOnChanges","ReservationModal.ngOnInit"],"mappings":"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","file":"app/components/reservation/reservation-modal.js","sourcesContent":["import {Component,   Input, OnInit,\n  ElementRef, ViewEncapsulation} from 'angular2/core';\nimport {Validators, FormBuilder} from 'angular2/common';\nimport {DatePicker} from '../form/date-picker';\nimport {SelectMenu} from '../form/select-menu';\nimport {Observable} from 'rxjs';\nimport {IFloorElement} from '../../services/FloorElementsService';\nimport {TimePicker} from '../form/time-picker';\nimport {Button} from '../form/button';\nimport {DATE_ONLY_FORMAT, INTERVAL_DATA} from '../../constants';\nimport {IReservation, ReservationService} from '../../services/ReservationService';\n\ndeclare var jQuery: any;\ndeclare var moment: any;\n\n@Component({\n  selector: 'reservation-modal',\n  directives: [DatePicker, SelectMenu, Button, TimePicker],\n  styleUrls: ['styles/reservation-modal.css'],\n  encapsulation: ViewEncapsulation.None,\n  inputs: ['data', 'formData', 'activeReservation'],\n  template: `\n    <div class=\"wrapper\">\n      <div class=\"booking\" *ngIf=\"reserveID === data.elementID\" [ngClass]=\"{'active': isActive, 'submitting': isSubmitting}\">\n        <form [ngFormModel]=\"reserveForm\" (submit)=\"submitReservationForm($event)\">\n          <div *ngIf=\"!activeReservation\">\n            <div class=\"heading\">\n              Booking room / {{ data.elementName }}\n            </div>\n            <div class=\"time\">\n              <div>\n                <i class=\"fa fa-calendar\"></i>\n                <strong>{{ reservationDate }}</strong>\n              </div>\n              <div>\n                <i class=\"fa fa-clock-o\"></i>\n                {{ reservationTime }}\n              </div>\n            </div>\n          </div>\n\n          <div *ngIf=\"activeReservation\">\n            <div class=\"heading\">\n              Edit reservation\n            </div>\n\n            <div class=\"row form-element\">\n              <div class=\"col-xs-4\">\n                <label for=\"from\">From</label>\n                <input type=\"hidden\" id=\"from\" name=\"from\" ngControl=\"from\" value=\"\">\n                <time-picker controlName=\"from\" [formModel]=\"reserveForm\" class-name=\"reservation-modal\"></time-picker>\n              </div>\n\n              <div class=\"col-xs-4\">\n                <label for=\"to\">To</label>\n                <input type=\"hidden\" id=\"to\" name=\"to\" ngControl=\"to\" value=\"\">\n                <time-picker controlName=\"to\" [formModel]=\"reserveForm\" class-name=\"reservation-modal\"></time-picker>\n              </div>\n            </div>\n\n\n          </div>\n          <div class=\"form-element\">\n            <label for=\"description\">Description</label>\n            <textarea name=\"description\" ngControl=\"description\" id=\"description\" placeholder=\"Enter description...\"></textarea>\n          </div>\n\n          <div class=\"form-element recurring\">\n              <input button type=\"checkbox\" name=\"recurring\" id=\"recurring\"\n                ngControl=\"recurring\" [formModel]=\"reserveForm\">\n              <label for=\"recurring\">\n                Recurring\n              </label>\n\n          </div>\n\n          <div class=\"row form-element\" *ngIf=\"reserveForm.value.recurring\">\n            <div class=\"col-xs-6\">\n              <label for=\"from\">Interval</label>\n              <select controlName=\"interval\" [formModel]=\"reserveForm\" name=\"interval\" id=\"interval\" select-menu>\n                <option *ngFor=\"#item of intervalData\" value=\"{{ item.value }}\">{{ item.text }}</option>\n              </select>\n            </div>\n\n            <div class=\"col-xs-6\">\n              <label for=\"to\">Until</label>\n              <input type=\"hidden\" id=\"until\" name=\"until\" ngControl=\"until\" value=\"\">\n              <date-picker controlName=\"until\" [formModel]=\"reserveForm\" [data]=\"filter\"></date-picker>\n            </div>\n          </div>\n\n          <div class=\"buttons\">\n            <a (click)=\"dismissBooking()\"><i class=\"fa fa-times\"></i></a>\n            <a (click)=\"submitReservationForm()\"><i class=\"fa fa-check\"></i></a>\n          </div>\n        </form>\n      </div>\n    </div>\n  `\n})\n\nexport class ReservationModal implements OnInit {\n  @Input() data: IFloorElement;\n  @Input() activeReservation: IReservation;\n  reserveID: string;\n  isActive: boolean;\n  isSubmitting: boolean;\n  reserveForm: any;\n  reservationDate: string;\n  reservationTime: string;\n  reservationObserver;\n  reservationFilterObserver;\n  intervalData;\n\n  constructor(private elementRef: ElementRef, private ReservationService: ReservationService, private fb: FormBuilder) {\n    this.reservationFilterObserver = ReservationService.getReservationFilterObserver();\n    this.reservationTime = ReservationService.reservationTime;\n    if (this.ReservationService.filter.reservationDate) {\n      this.reservationDate = this.ReservationService.filter.reservationDate.format(DATE_ONLY_FORMAT);\n    }\n    this.reservationObserver = ReservationService.getObservable();\n    this.isActive = false;\n    this.intervalData = INTERVAL_DATA;\n  }\n\n  dismissBooking() {\n    if (!this.isSubmitting) {\n      this.isActive = false;\n      setTimeout(() => {\n        this.reservationObserver\n          .subscription\n          .next();\n        this.reserveID = null;\n      }, 200);\n    }\n  }\n\n  submitReservationForm() {\n    if (!this.isSubmitting) {\n      this.isSubmitting = true;\n      this.ReservationService.makeReservation({\n          elementID: this.data.elementID,\n          description: this.reserveForm.value.description,\n          recurring: this.reserveForm.value.recurring,\n          interval: this.reserveForm.value.interval,\n          until: moment(this.reserveForm.value.until, DATE_ONLY_FORMAT)\n        })\n        .add(() => {\n          this.reservationObserver\n            .subscription\n            .next();\n          this.isSubmitting = false;\n        });\n    }\n  }\n\n  ngOnChanges() {\n    if (this.activeReservation) {\n      let description = this.activeReservation.description;\n      let reservationDate = moment.utc(this.activeReservation.reservationDate);\n      let reservationEndDate = moment.utc(this.activeReservation.reservationEndDate);\n      this.reserveForm = this.fb.group({\n        description: [description],\n        from: [reservationDate.format('h:mma')],\n        to: [reservationEndDate.format('h:mma')]\n      });\n    } else {\n      this.reserveForm = this.fb.group({\n        description: [''],\n        from: [''],\n        to: [''],\n        recurring: [false],\n        interval: ['day'],\n        until: ['']\n      });\n    }\n    this.reserveForm.valueChanges\n    .subscribe((res) => {\n      this.reserveForm.value = res;\n    });\n  }\n\n  ngOnInit() {\n    this.reservationObserver\n      .delay(50)\n      .subscribe(() => {\n        this.isActive = true;\n      });\n    this.reservationFilterObserver\n      .subscribe(() => {\n        this.reservationTime = this.ReservationService.reservationTime;\n        this.reservationDate = this.ReservationService.filter.reservationDate.format(DATE_ONLY_FORMAT);\n      });\n    this.reservationObserver\n      .subscribe(\n        res => {\n          this.isActive = false;\n          this.reserveID = res;\n        }\n      );\n  }\n}\n"],"sourceRoot":"/source/"}